{"version":3,"file":"fxmaster.js","sources":["../src/constants.js","../src/utils.js","../src/logger.js","../src/migration/helpers.js","../src/migration/world/2.js","../src/migration/world/3.js","../src/migration/world/migration.js","../src/migration/client/1.js","../src/migration/migration.js","../src/migration/client/migration.js","../src/settings.js","../src/hooks.js","../src/filter-effects/filters/mixins/filter.js","../src/filter-effects/filters/mixins/fading-filter.js","../src/filter-effects/filters/bloom.js","../src/filter-effects/filters/color.js","../src/filter-effects/filters/fog.js","../src/ease.js","../src/filter-effects/filters/lightning.js","../src/filter-effects/filters/old-film.js","../src/filter-effects/filters/predator.js","../src/filter-effects/filters/underwater.js","../src/filter-effects/filter-effects-db.js","../src/particle-effects/effects/effect.js","../src/particle-effects/effects/mixins/default-retangle-spawn.js","../src/particle-effects/effects/spiders.js","../src/particle-effects/effects/helpers/with-stepped-gradient-color.js","../src/particle-effects/effects/stars.js","../src/particle-effects/effects/leaves.js","../src/particle-effects/effects/bats.js","../src/particle-effects/effects/bubbles.js","../src/particle-effects/effects/clouds.js","../src/particle-effects/effects/crows.js","../src/particle-effects/effects/fog.js","../src/particle-effects/effects/rats.js","../src/particle-effects/effects/snowstorm.js","../src/particle-effects/particle-effects-db.js","../src/config.js","../src/particle-effects/effects/birds.js","../src/particle-effects/effects/eagles.js","../src/particle-effects/effects/embers.js","../src/particle-effects/effects/rain.js","../src/particle-effects/effects/rain-top.js","../src/particle-effects/effects/rain-simple.js","../src/particle-effects/effects/snow.js","../src/special-effects/special-effects-db.js","../src/particle-effects/particle-effects-layer.js","../src/particle-effects/drawings-mask.js","../src/particle-effects/scene-mask.js","../src/filter-effects/filter-manager.js","../src/special-effects/applications/special-effect-config.js","../src/special-effects/applications/special-effects-management.js","../src/special-effects/mesh.js","../src/special-effects/special-effects-layer.js","../src/base-form.js","../src/particle-effects/applications/particle-effects-management.js","../src/filter-effects/applications/filter-effects-management.js","../src/macro.js","../src/controls.js","../src/fxmaster.js","../src/handlebars-helpers.js"],"sourcesContent":["export const packageId = \"fxmaster\";\n","import { packageId } from \"./constants.js\";\n\n/**\n * Reset a flag to a given value, replacing inner objects.\n * @param {foundry.abstract.Document} document The document on which to reset the flag\n * @param {string}                    key      The flag key\n * @param {*}                         value    The flag value\n * @return {Promise<Document>}  A Promise resolving to the updated document\n */\nexport function resetFlag(document, key, value) {\n  if (typeof value === \"object\" && !Array.isArray(value) && value !== null) {\n    const oldFlags = document.getFlag(packageId, key);\n    const keys = oldFlags ? Object.keys(oldFlags) : [];\n    keys.forEach((k) => {\n      if (value[k]) return;\n      value[`-=${k}`] = null;\n    });\n  }\n  return document.setFlag(packageId, key, value);\n}\n\n/**\n * Round a number to the given number of decimals.\n * @param {number} number   The number to round\n * @param {number} decimals The number of decimals to round to\n * @returns {number} The rounded result\n */\nexport function roundToDecimals(number, decimals) {\n  return Number(Math.round(number + \"e\" + decimals) + \"e-\" + decimals);\n}\n\n/**\n * Omit a specific key from an object.\n * @param {object} object The object from which to omit\n * @param {string|number|symbol} key The key to omit\n * @returns {object} The object without the given key.\n */\nexport function omit(object, key) {\n  const { [key]: _omitted, ...rest } = object;\n  return rest;\n}\n","const loggingContext = \"FXMaster\";\nconst loggingSeparator = \"|\";\n\n/**\n * Gets a logging function for the requested log level.\n * @typedef {'debug' | 'info' | 'warn' | 'error'} LogLevel\n * @typedef {(...args: unknown[]) => void} LoggingFunction\n * @param {LogLevel} [type = 'info'] - The log level of the requested logger\n * @returns {LoggingFunction}\n */\nfunction getLoggingFunction(type = \"info\") {\n  const log = console[type];\n  return (...data) => log(loggingContext, loggingSeparator, ...data);\n}\n\n/**\n * Format a message for logging.\n * @param {string} msg The message to format for logging.\n */\nexport function format(msg) {\n  return `${loggingContext} ${loggingSeparator} ${msg}`;\n}\n\n/**\n * A singleton logger object.\n */\nexport const logger = Object.freeze({\n  debug: getLoggingFunction(\"debug\"),\n  info: getLoggingFunction(\"info\"),\n  warn: getLoggingFunction(\"warn\"),\n  error: getLoggingFunction(\"error\"),\n  getLoggingFunction,\n});\n","import { logger } from \"../logger.js\";\n\n/**\n * Migrate a world collection.\n * @param {WorldCollection} collection The world collection to migrate\n * @param {(document: Document) => Promise<void>} migrateDocument The function to use for updating a single document\n * @returns {Promise<boolean>} Whether or not there was an error during the migration\n */\nexport async function migrateWorldCollection(collection, migrateDocument) {\n  let isError = false;\n\n  for (const document of collection) {\n    logger.debug(`Migrating ${collection.documentName} '${document.name}' (${document.id}).`);\n    try {\n      await migrateDocument(document);\n    } catch (e) {\n      logger.error(`Migration of ${collection.documentName} '${document.name}' (${document.id}) failed.`, e);\n      isError = true;\n    }\n  }\n\n  return isError;\n}\n\n/**\n * Migrate a compendium pack.\n * @param {CompendiumCollection} pack The compendium pack to migrate\n * @param {(document: Document) => Promise<void>} migrateDocument The function to use for updating a single document\n * @returns {Promise<boolean>} Whether or not there was an error during the migration\n */\nexport async function migrateCompendiumCollection(pack, migrateDocument) {\n  let isError = false;\n\n  const type = pack.metadata.type;\n\n  const wasLocked = pack.locked;\n  await pack.configure({ locked: false });\n\n  const documents = await pack.getDocuments();\n\n  for (const document of documents) {\n    logger.debug(`Migrating ${type} '${document.name}' (${document.id}) in compendium ${pack.collection}.`);\n    try {\n      await migrateDocument(document);\n    } catch (e) {\n      logger.error(\n        `Migration of ${type} '${document.name}' (${document.id}) in compendium ${pack.collection} failed.`,\n        e,\n      );\n      isError = true;\n    }\n  }\n\n  await pack.configure({ locked: wasLocked });\n\n  return isError;\n}\n\n/** @typedef {Record<string, (document: Document) => Promise<void>} MigrationConfiguration */\n\n/**\n * Migrate the given world collections according to the given migration configuration.\n * @param {Iterable<WorldCollection>} collections            The world collections to migrate\n * @param {MigrationConfiguration}    migrationConfiguration The configuration for the migration\n * @returns {Promise<boolean>} Whether or not there was an error during the migration\n */\nexport async function migrateWorldCollections(collections, migrationConfiguration) {\n  let isError = false;\n\n  for (const collection of collections) {\n    const type = collection.documentName;\n    if (!(type in migrationConfiguration)) {\n      continue;\n    }\n    isError |= await migrateWorldCollection(collection, migrationConfiguration[type]);\n  }\n\n  return isError;\n}\n\n/** @typedef {{migrateNonWorldPacks?: boolean}} MigrateCompendiumCollectionsOptions */\n\n/**\n * Migrate the given compoendium packs according to the given migration configuration.\n * @param {Iterable<CompendiumCollection>}      collections            The compendium packs to migrate\n * @param {MigrationConfiguration}              migrationConfiguration The configuration for the migration\n * @param {MigrateCompendiumCollectionsOptions} [options={}]           Additional options for the migration\n * @returns {Promise<boolean>} Whether or not there was an error during the migration\n */\nexport async function migrateCompendiumCollections(\n  packs,\n  migrationConfiguration,\n  { migrateNonWorldPacks = false } = {},\n) {\n  let isError = false;\n\n  for (const pack of packs) {\n    const type = pack.metadata.type;\n    if ((pack.metadata.package !== \"world\" && !migrateNonWorldPacks) || !(type in migrationConfiguration)) {\n      continue;\n    }\n    isError |= await migrateCompendiumCollection(pack, migrationConfiguration[type]);\n  }\n\n  return isError;\n}\n\n/**\n * Perform a migration for the given migration configuration.\n * @param {MigrationConfiguration} migrationConfiguration The configuration for the migration\n * @returns {Promise<boolean>} Whether or not there was an error during the migration\n */\nexport async function migrate(migrationConfiguration) {\n  let isError = false;\n  isError |= await migrateWorldCollections(game.collections, migrationConfiguration);\n  isError |= await migrateCompendiumCollections(game.packs, migrationConfiguration);\n  return isError;\n}\n","import { packageId } from \"../../constants.js\";\nimport { resetFlag } from \"../../utils.js\";\nimport { migrate } from \"../helpers.js\";\n\nexport async function migrate2() {\n  return migrate(migrationConfiguration2);\n}\n\n/** @type {import('../helpers.js').MigrationConfiguration} */\nexport const migrationConfiguration2 = {\n  Scene: migrateScene,\n};\n\nasync function migrateScene(scene) {\n  const particleEffects = scene.getFlag(packageId, \"effects\") ?? {};\n  if (Object.keys(particleEffects).length > 0) {\n    const newParticleEffects = Object.fromEntries(\n      Object.entries(particleEffects).map(([id, effect]) => {\n        const particleEffectClass = CONFIG.fxmaster.particleEffects[effect.type];\n        return [id, { ...effect, options: particleEffectClass.convertOptionsToV2(effect.options, scene) }];\n      }),\n    );\n    await resetFlag(scene, \"effects\", newParticleEffects);\n  }\n}\n","import { packageId } from \"../../constants.js\";\nimport { migrate } from \"../helpers.js\";\n\nexport async function migrate3() {\n  return migrate(migrationConfiguration3);\n}\n\n/** @type {import('../helpers.js').MigrationConfiguration} */\nexport const migrationConfiguration3 = {\n  Macro: migrateMacro,\n  Scene: migrateScene,\n};\n\nasync function migrateMacro(macro) {\n  /** @type {{command: string, img: string | null}} */\n  const { command, img } = macro;\n\n  const newCommand = command\n    ?.replaceAll(`${packageId}.updateWeather`, `${packageId}.updateParticleEffects`)\n    .replaceAll(`updateWeather`, `${packageId}.updateParticleEffects`)\n    .replaceAll(`${packageId}.switchWeather`, `${packageId}.switchParticleEffect`)\n    .replaceAll(`switchWeather`, `${packageId}.switchParticleEffect`)\n    .replaceAll(\"fxmaster/assets/specialEffects\", \"fxmaster/assets/special-effects\")\n    .replaceAll(\n      \"fxmaster/assets/special-effects/fxmaster/smokeBomb.webm\",\n      \"fxmaster/assets/special-effects/fxmaster/smoke-bomb.webm\",\n    );\n\n  const newImg = img?.replaceAll(\"fxmaster/assets/weatherEffects/icons\", \"fxmaster/assets/particle-effects/icons\");\n\n  if (newCommand !== command || newImg !== img) {\n    await macro.update({ command: newCommand, img: newImg });\n  }\n}\n\nasync function migrateScene(scene) {\n  if (scene.getFlag(packageId, \"filteredLayers\") !== undefined) {\n    await scene.unsetFlag(packageId, \"filteredLayers\");\n  }\n}\n","/* eslint-disable no-fallthrough */\nimport { packageId } from \"../../constants.js\";\nimport { migrate2, migrationConfiguration2 } from \"./2.js\";\nimport { migrate3, migrationConfiguration3 } from \"./3.js\";\n\nexport const targetServerMigration = 3;\n\nexport async function migrateWorld() {\n  const migration = game.settings.get(packageId, \"migration\");\n  if (migration === -1) {\n    return game.settings.set(packageId, \"migration\", targetServerMigration);\n  }\n\n  if (migration < targetServerMigration) {\n    ui.notifications.info(\"FXMASTER.MigrationWorldStart\", { localize: true, permanent: true });\n    let isError = false;\n\n    switch (migration) {\n      case 0:\n      case 1:\n        isError |= await migrate2();\n      case 2:\n        isError |= await migrate3();\n    }\n\n    if (isError) {\n      await game.settings.set(packageId, \"disableAll\", true);\n      ui.notifications.error(\"FXMASTER.MigrationWorldCompletedWithErrors\", { localize: true, permanent: true });\n    } else {\n      ui.notifications.info(\"FXMASTER.MigrationWorldCompletedSuccessfully\", { localize: true, permanent: true });\n    }\n    await game.settings.set(packageId, \"migration\", targetServerMigration);\n  }\n}\n\nexport function isOnTargetWorldMigration() {\n  return game.settings.get(packageId, \"migration\") === targetServerMigration;\n}\n\nexport const worldMigrations = {\n  2: {\n    migrate: migrate2,\n    config: migrationConfiguration2,\n  },\n  3: {\n    migrate: migrate3,\n    config: migrationConfiguration3,\n  },\n};\n","import { packageId } from \"../../constants.js\";\n\nexport async function migrate1() {\n  const effects = game.settings.get(packageId, \"specialEffects\");\n  for (let i = 0; i < effects.length; ++i) {\n    if (typeof effects[i].scale !== \"object\") {\n      effects[i].scale = {\n        x: effects[i].scale,\n        y: effects[i].scale,\n      };\n    }\n  }\n  await game.settings.set(packageId, \"specialEffects\", effects);\n  return false;\n}\n","import { isOnTargetWorldMigration, migrateWorld, worldMigrations } from \"./world/migration.js\";\nimport { clientMigrations, isOnTargetClientMigration, migrateClient } from \"./client/migration.js\";\nimport * as helpers from \"./helpers.js\";\n\nexport async function migrate() {\n  await migrateClient();\n  if (game.user.isGM) {\n    await migrateWorld();\n  }\n}\n\nexport function isOnTargetMigration() {\n  return isOnTargetWorldMigration() && isOnTargetClientMigration();\n}\n\n/**\n * Schedule a callback to be executed as soon as the world has been migrated to the target migration. If it is on the\n * latest migration already, the callback is executed immediately. Callbacks are executed in the order in that they have\n * been registered.\n * @param {() => (Promise<void> | void)} callback A callback to execute when the world is migrated\n */\nexport function executeWhenWorldIsMigratedToLatest(callback) {\n  if (!isOnTargetWorldMigration()) {\n    worldMigrationCallbacks.push(callback);\n  } else {\n    callback();\n  }\n}\n\n/** @type {Array<() => (Promise<void> | void)>} */\nconst worldMigrationCallbacks = [];\n\nexport async function onWorldMigrated() {\n  if (isOnTargetWorldMigration()) {\n    while (worldMigrationCallbacks.length > 0) {\n      const callback = worldMigrationCallbacks.shift();\n      await callback();\n    }\n  }\n}\n\nexport const migration = { client: clientMigrations, world: worldMigrations, helpers };\n","import { packageId } from \"../../constants.js\";\nimport { migrate1 } from \"./1.js\";\n\nexport const targetClientMigration = 1;\n\nexport async function migrateClient() {\n  const migration = game.settings.get(packageId, \"clientMigration\");\n  if (migration === -1) {\n    return game.settings.set(packageId, \"clientMigration\", targetClientMigration);\n  }\n\n  if (migration < targetClientMigration) {\n    ui.notifications.info(\"FXMASTER.MigrationClientStart\", { permanent: true, localize: true });\n    let isError = false;\n\n    switch (migration) {\n      case 0:\n        isError |= await migrate1();\n    }\n\n    if (isError) {\n      ui.notifications.error(\"FXMASTER.MigrationClientCompletedWithErrors\", { localize: true, permanent: true });\n    } else {\n      ui.notifications.info(\"FXMASTER.MigrationClientCompletedSuccessfully\", { localize: true, permanent: true });\n    }\n    await game.settings.set(packageId, \"clientMigration\", targetClientMigration);\n  }\n}\n\nexport function isOnTargetClientMigration() {\n  return game.settings.get(packageId, \"clientMigration\") === targetClientMigration;\n}\n\nexport const clientMigrations = {\n  1: {\n    migrate: migrate1,\n  },\n};\n","import { packageId } from \"./constants.js\";\nimport { onWorldMigrated } from \"./migration/migration.js\";\n\nexport function registerSettings() {\n  game.settings.register(packageId, \"enable\", {\n    name: \"FXMASTER.Enable\",\n    default: true,\n    scope: \"client\",\n    type: Boolean,\n    config: true,\n    requiresReload: true,\n  });\n\n  game.settings.register(packageId, \"specialEffects\", {\n    name: \"specialEffects\",\n    default: [],\n    scope: \"world\",\n    type: Array,\n    config: false,\n  });\n\n  game.settings.register(packageId, \"migration\", {\n    name: \"migration\",\n    default: -1,\n    scope: \"world\",\n    type: Number,\n    config: false,\n    onChange: onWorldMigrated,\n  });\n\n  game.settings.register(packageId, \"clientMigration\", {\n    name: \"clientMigration\",\n    default: -1,\n    scope: \"client\",\n    type: Number,\n    config: false,\n  });\n\n  game.settings.register(packageId, \"permission-create\", {\n    name: \"FXMASTER.PermissionCreate\",\n    hint: \"FXMASTER.PermissionCreateHint\",\n    scope: \"world\",\n    config: true,\n    default: foundry.CONST.USER_ROLES.ASSISTANT,\n    type: Number,\n    choices: {\n      [foundry.CONST.USER_ROLES.PLAYER]: \"USER.RolePlayer\",\n      [foundry.CONST.USER_ROLES.TRUSTED]: \"USER.RoleTrusted\",\n      [foundry.CONST.USER_ROLES.ASSISTANT]: \"USER.RoleAssistant\",\n      [foundry.CONST.USER_ROLES.GAMEMASTER]: \"USER.RoleGamemaster\",\n    },\n    requiresReload: true,\n  });\n\n  game.settings.register(packageId, \"disableAll\", {\n    name: \"FXMASTER.DisableAll\",\n    hint: \"FXMASTER.DisableAllHint\",\n    default: false,\n    scope: \"world\",\n    type: Boolean,\n    config: true,\n  });\n}\n\nexport function isEnabled() {\n  return game.settings.get(packageId, \"enable\") && !game.settings.get(packageId, \"disableAll\");\n}\n","import { packageId } from \"./constants.js\";\nimport { format } from \"./logger.js\";\nimport { omit, resetFlag } from \"./utils.js\";\n\nexport const registerHooks = function () {\n  Hooks.on(`${packageId}.switchParticleEffect`, onSwitchParticleEffects);\n  Hooks.on(`${packageId}.updateParticleEffects`, onUpdateParticleEffects);\n  Object.keys(deprecations).forEach((hook) => Hooks.on(hook, onDeprecated(hook)));\n};\n\n/**\n * Handle a request to toggle named a particle effect in the current scene.\n * @param {{name: string, type: string, options: object}} parameters The parameters that define the named particle effect\n */\nasync function onSwitchParticleEffects(parameters) {\n  if (!canvas.scene) {\n    return;\n  }\n\n  const currentEffects = canvas.scene.getFlag(packageId, \"effects\") ?? {};\n  const shouldSwitchOff = parameters.name in currentEffects;\n  const effects = shouldSwitchOff\n    ? omit(currentEffects, parameters.name)\n    : { ...currentEffects, [parameters.name]: { type: parameters.type, options: parameters.options } };\n\n  if (Object.keys(effects).length == 0) {\n    await canvas.scene.unsetFlag(packageId, \"effects\");\n  } else {\n    resetFlag(canvas.scene, \"effects\", effects);\n  }\n}\n\n/**\n * Handle a request to set the particle effects in the current scene.\n * @param {Array<object>} parametersArray The array of parameters defining the effects to be activated\n */\nasync function onUpdateParticleEffects(parametersArray) {\n  const effects = Object.fromEntries(parametersArray.map((parameters) => [foundry.utils.randomID(), parameters]));\n  resetFlag(canvas.scene, \"effects\", effects);\n}\n\nconst deprecations = {\n  updateWeather: {\n    replacedBy: `${packageId}.updateParticleEffects`,\n    callback: onUpdateParticleEffects,\n  },\n  switchWeather: {\n    replacedBy: `${packageId}.switchParticleEffects`,\n    callback: onSwitchParticleEffects,\n  },\n  [`${packageId}.updateWeather`]: {\n    replacedBy: `${packageId}.updateParticleEffects`,\n    callback: onUpdateParticleEffects,\n  },\n  [`${packageId}.switchWeather`]: {\n    replacedBy: `${packageId}.switchParticleEffects`,\n    callback: onSwitchParticleEffects,\n  },\n};\n\nfunction onDeprecated(hook) {\n  return function (...args) {\n    const deprecation = deprecations[hook];\n    const msg = format(`The '${hook}' hook is deprecated in favor of the '${deprecation.replacedBy}' hook`);\n    foundry.utils.logCompatibilityWarning(msg, {\n      mod: foundry.CONST.COMPATIBILITY_MODES.WARNING,\n      since: \"FXMaster v3.0.0\",\n      until: \"FXMaster v4.0.0\",\n      stack: false,\n    });\n    deprecation.callback(...args);\n  };\n}\n","/**\n * A mixin which extends {@link PIXI.Filter} with some common behavior.\n * @param {PIXI.Filter} Base The base filter class which this mixin extends\n * @returns The extended filter class\n */\nexport function FXMasterFilterEffectMixin(Base) {\n  return class extends Base {\n    /**\n     * @param {object} options Additional options to configure the filter\n     * @param {string} id The id which identifies this filter instance\n     * @param  {...any} args Additional arguments to pass to the Base constructor\n     */\n    constructor(options, id, ...args) {\n      super(...args);\n      this.id = id;\n      this.enabled = false;\n      this.configure(options);\n      this.applyOptions(this.constructor.neutral);\n    }\n\n    /**\n     * The id which identifies this filter effect instance.\n     * @type {string}\n     */\n    id;\n\n    /**\n     * The current options for this filter effect.\n     * @type {object}\n     */\n    options;\n\n    /**\n     * A human-readable label for the filter effect. This can be a localization string.\n     * @type {string}\n     */\n    static label = \"FXMASTER.FilterEffect\";\n\n    /**\n     * A Font Awesome icon to display for this filter effect in the {@link FilterEffectsManagementConfig}.\n     * @type {string}\n     */\n    static icon = \"fas fa-filter\";\n\n    /**\n     * The set of parameters the filter effect supports.\n     * @type {object}\n     */\n    static get parameters() {\n      return {};\n    }\n\n    /**\n     * The default values for the parameters of this filter effect.\n     * @type {object}\n     */\n    static get default() {\n      return Object.fromEntries(\n        Object.entries(this.parameters).map(([parameterName, parameterConfig]) => [\n          parameterName,\n          parameterConfig.value,\n        ]),\n      );\n    }\n\n    /**\n     * The set of options for this filter effect that represent a neutral state.\n     */\n    static get neutral() {\n      return {};\n    }\n\n    /**\n     * Configure the options for this filter.\n     * @param {object | undefined} options The options to use\n     */\n    configure(options) {\n      if (!options) {\n        return;\n      }\n      this.options = { ...this.constructor.default, ...options };\n    }\n\n    /**\n     * The context on which options should be applied.\n     * @type {object}\n     */\n    get optionContext() {\n      return this;\n    }\n\n    /**\n     * Apply options to this filter effect, setting the corresponding properties on this effect itself.\n     * @param {object} options The options to apply\n     */\n    applyOptions(options = this.options) {\n      const keys = Object.keys(options);\n      for (const key of keys) {\n        this.optionContext[key] = options[key];\n      }\n    }\n\n    /**\n     * Play this filter.\n     * @param {object} _options Additional options to adjust the playing behavior\n     */\n    play(_options = {}) {\n      this.applyOptions();\n      this.enabled = true;\n    }\n\n    /**\n     * Stop this filter.\n     * @param {object} _options Additional options to adjust the stopping behavior\n     * @returns {Promise<boolean>} A promise that resolves to `true` once the stop operation has concluded or `false` if\n     *                             the operation was cancelled.\n     */\n    async stop(_options = {}) {\n      this.enabled = false;\n      this.applyOptions(this.constructor.neutral);\n      return true;\n    }\n\n    /**\n     * Perform a step in any potential animation this filter effect might have. This is called periodically by ticker.\n     */\n    async step() {}\n  };\n}\n","import { packageId } from \"../../../constants.js\";\nimport { FXMasterFilterEffectMixin } from \"./filter\";\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {number} [duration=4000] The duration of the animation\n */\n\n/**\n * A mixin which extends {@link PIXI.Filter} with some common behavior and fading.\n * @param {PIXI.Filter} Base The base filter class which this mixin extends\n * @returns The extended filter class\n */\nexport function FadingFilterMixin(Base) {\n  return class extends FXMasterFilterEffectMixin(Base) {\n    /**\n     * The currently running animation, if any.\n     * @type {Promise<boolean> | undefined}\n     */\n    currentAnimation;\n\n    /** Has this filter already been initialized? */\n    initialized = false;\n\n    /**\n     * Apply options to this filter effect as an animation.\n     * @param {object} [options] The options to animate\n     * @param {AnimationOptions} [animationOptions={}] Additional options to adjust the animation behavior\n     */\n    async animateOptions(options = this.options, { duration = 4_000 } = {}) {\n      const name = `${packageId}.${this.constructor.name}.${this.id}`;\n      if (this.currentAnimation !== undefined) {\n        CanvasAnimation.terminateAnimation(name);\n        await this.currentAnimation;\n      }\n      const data = { name, duration };\n\n      const [toAnimate, toSet] = Object.entries(options)\n        .partition(([key]) => !!this.constructor.parameters[key]?.skipInitialAnimation && !this.initialized)\n        .map(Object.fromEntries);\n\n      this.applyOptions(toSet);\n\n      const anim = Object.entries(toAnimate).map(([key, value]) => ({\n        parent: this.optionContext,\n        attribute: key,\n        to: value,\n      }));\n      this.currentAnimation = CanvasAnimation.animate(anim, data).finally(() => (this.currentAnimation = undefined));\n      return this.currentAnimation;\n    }\n\n    /** @override */\n    play({ skipFading = false, ...otherOptions } = {}) {\n      if (skipFading) {\n        super.play({ skipFading, ...otherOptions });\n      } else {\n        this.enabled = true;\n        this.animateOptions();\n      }\n      this.initialized = true;\n    }\n\n    /** @override */\n    async stop({ skipFading = false, ...otherOptions } = {}) {\n      if (skipFading) {\n        return super.stop({ skipFading, ...otherOptions });\n      } else {\n        const completed = await this.animateOptions(this.constructor.neutral);\n        if (completed) {\n          this.enabled = false;\n        }\n        return completed;\n      }\n    }\n  };\n}\n","import { FadingFilterMixin } from \"./mixins/fading-filter.js\";\n\nexport class BloomFilter extends FadingFilterMixin(PIXI.filters.AdvancedBloomFilter) {\n  /** @override */\n  static label = \"FXMASTER.FilterEffectBloom\";\n\n  /** @override */\n  static icon = \"fas fa-ghost\";\n\n  /** @override */\n  static get parameters() {\n    return {\n      blur: {\n        label: \"FXMASTER.Blur\",\n        type: \"range\",\n        max: 10.0,\n        min: 0.0,\n        step: 1.0,\n        value: 1.0,\n      },\n      bloomScale: {\n        label: \"FXMASTER.Bloom\",\n        type: \"range\",\n        max: 1.0,\n        min: 0.0,\n        step: 0.1,\n        value: 0.1,\n      },\n      threshold: {\n        label: \"FXMASTER.Threshold\",\n        type: \"range\",\n        max: 1.0,\n        min: 0.0,\n        step: 0.1,\n        value: 0.5,\n      },\n    };\n  }\n\n  /** @override */\n  static get neutral() {\n    return {\n      noise: 0.0,\n      bloomScale: 0.0,\n      threshold: 1.0,\n    };\n  }\n}\n","import { FadingFilterMixin } from \"./mixins/fading-filter.js\";\n\nexport class ColorFilter extends FadingFilterMixin(PIXI.filters.AdjustmentFilter) {\n  /** @override */\n  static label = \"FXMASTER.FilterEffectColor\";\n\n  /** @override */\n  static icon = \"fas fa-palette\";\n\n  /** @override */\n  static get parameters() {\n    return {\n      color: {\n        label: \"FXMASTER.Tint\",\n        type: \"color\",\n        value: {\n          value: \"#FFFFFF\",\n          apply: false,\n        },\n      },\n      saturation: {\n        label: \"FXMASTER.Saturation\",\n        type: \"range\",\n        max: 2.0,\n        min: 0.0,\n        step: 0.1,\n        value: 1.0,\n      },\n      contrast: {\n        label: \"FXMASTER.Contrast\",\n        type: \"range\",\n        max: 2.0,\n        min: 0.0,\n        step: 0.1,\n        value: 1.0,\n      },\n      brightness: {\n        label: \"FXMASTER.Brightness\",\n        type: \"range\",\n        max: 2.0,\n        min: 0.0,\n        step: 0.1,\n        value: 1.0,\n      },\n      gamma: {\n        label: \"FXMASTER.Gamma\",\n        type: \"range\",\n        max: 2.0,\n        min: 0.0,\n        step: 0.1,\n        value: 1.0,\n      },\n    };\n  }\n\n  /** @override */\n  static get neutral() {\n    return {\n      red: 1,\n      green: 1,\n      blue: 1,\n      saturation: 1,\n      gamma: 1,\n      brightness: 1,\n      contrast: 1,\n    };\n  }\n\n  /** @override */\n  configure(options) {\n    if (!options) {\n      return;\n    }\n    const { color, ...otherOptions } = options;\n    const { r: red, g: green, b: blue } = foundry.utils.Color.from(color.apply ? color.value : 0xffffff);\n    super.configure({ ...otherOptions, red, green, blue });\n  }\n}\n","import fog from \"./shaders/fog.frag\";\nimport customVertex2D from \"./shaders/custom-vertex-2d.vert\";\nimport { FadingFilterMixin } from \"./mixins/fading-filter.js\";\n\nexport class FogFilter extends FadingFilterMixin(PIXI.Filter) {\n  constructor(options, id) {\n    super(options, id, customVertex2D, fog);\n    this.uniforms.time = 0.0;\n    this.uniforms.dimensions = new Float32Array([0.0, 0.0]);\n    this.uniforms.color = new Float32Array([0.0, 0.0, 0.0, 1.0]);\n  }\n\n  /** @type {number} */\n  lastTick;\n\n  /** @override */\n  static label = \"FXMASTER.FilterEffectFog\";\n\n  /** @override */\n  static icon = \"fas fa-cloud\";\n\n  /** @override */\n  static get parameters() {\n    return {\n      dimensions: {\n        label: \"FXMASTER.Scale\",\n        type: \"range\",\n        max: 5,\n        min: 0,\n        step: 0.1,\n        value: 1,\n        skipInitialAnimation: true,\n      },\n      speed: {\n        label: \"FXMASTER.Speed\",\n        type: \"range\",\n        max: 5,\n        min: 0,\n        step: 0.1,\n        value: 1,\n        skipInitialAnimation: true,\n      },\n      density: {\n        label: \"FXMASTER.Density\",\n        type: \"range\",\n        max: 1,\n        min: 0,\n        step: 0.05,\n        value: 0.65,\n      },\n      color: {\n        label: \"FXMASTER.Tint\",\n        type: \"color\",\n        value: {\n          value: \"#000000\",\n          apply: false,\n        },\n        skipInitialAnimation: true,\n      },\n    };\n  }\n\n  /** @override */\n  static get neutral() {\n    return {\n      density: 0,\n    };\n  }\n\n  /** @type {number} */\n  get r() {\n    return this.uniforms.color[0];\n  }\n  set r(value) {\n    this.uniforms.color[0] = value;\n  }\n\n  /** @type {number} */\n  get g() {\n    return this.uniforms.color[1];\n  }\n  set g(value) {\n    this.uniforms.color[1] = value;\n  }\n\n  /** @type {number} */\n  get b() {\n    return this.uniforms.color[2];\n  }\n  set b(value) {\n    this.uniforms.color[2] = value;\n  }\n\n  /** @type {number} */\n  get density() {\n    return this.uniforms.density;\n  }\n  set density(value) {\n    this.uniforms.density = value;\n  }\n\n  /** @type {number} */\n  get dimensions() {\n    return this.uniforms.dimensions[0];\n  }\n  set dimensions(value) {\n    this.uniforms.dimensions[0] = this.uniforms.dimensions[1] = (value * 100) / (canvas?.dimensions?.size ?? 100);\n  }\n\n  /** @override */\n  configure(options) {\n    if (!options) {\n      return;\n    }\n    const { color, ...otherOptions } = options;\n    const { r, g, b } = foundry.utils.Color.from(color.apply ? color.value : 0x000000);\n    super.configure({ ...otherOptions, r, g, b });\n  }\n\n  /** @override */\n  play(options) {\n    this.lastTick = canvas.app.ticker.lastTime;\n    super.play(options);\n  }\n\n  /** @override */\n  async step() {\n    const delta = canvas.app.ticker.lastTime - this.lastTick;\n    this.lastTick = canvas.app.ticker.lastTime;\n    this.uniforms.time += delta * this.speed * 0.1;\n    await super.step();\n  }\n\n  apply(filterManager, input, output, clear, currentState) {\n    this.uniforms.filterMatrix ??= new PIXI.Matrix();\n    this.uniforms.filterMatrix.copyFrom(currentState.target.worldTransform).invert();\n    return super.apply(filterManager, input, output, clear, currentState);\n  }\n}\n","export const easeFunctions = {\n  Linear: easeLinear,\n  InSine: easeInSine,\n  OutSine: easeOutSine,\n  InOutSine: easeInOutSine,\n  InBack: easeInBack,\n  OutBack: easeOutBack,\n  InOutBack: easeInOutBack,\n  InCubic: easeInCubic,\n  OutCubic: easeOutCubic,\n  InOutCubic: easeInOutCubic,\n  InCirc: easeInCirc,\n  OutCirc: easeOutCirc,\n  InOutCirc: easeInOutCirc,\n};\n\nexport function easeLinear(x) {\n  return x;\n}\n\nexport function easeInSine(x) {\n  return 1 - Math.cos((x * Math.PI) / 2);\n}\n\nexport function easeOutSine(x) {\n  return Math.sin((x * Math.PI) / 2);\n}\n\nexport function easeInOutSine(x) {\n  return -(Math.cos(Math.PI * x) - 1) / 2;\n}\n\nexport function easeInBack(x) {\n  const c1 = 1.70158;\n  const c3 = c1 + 1;\n  return c3 * x * x * x - c1 * x * x;\n}\n\nexport function easeOutBack(x) {\n  const c1 = 1.70158;\n  const c3 = c1 + 1;\n  return 1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2);\n}\n\nexport function easeInOutBack(x) {\n  const c1 = 1.70158;\n  const c2 = c1 * 1.525;\n  return x < 0.5\n    ? (Math.pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2)) / 2\n    : (Math.pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2;\n}\n\nexport function easeInCubic(x) {\n  return x * x * x;\n}\n\nexport function easeOutCubic(x) {\n  return 1 - Math.pow(1 - x, 3);\n}\n\nexport function easeInOutCubic(x) {\n  return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\n}\n\nexport function easeInCirc(x) {\n  return 1 - Math.sqrt(1 - Math.pow(x, 2));\n}\n\nexport function easeOutCirc(x) {\n  return Math.sqrt(1 - Math.pow(x - 1, 2));\n}\n\nexport function easeInOutCirc(x) {\n  return x < 0.5 ? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2 : (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2;\n}\n","import { packageId } from \"../../constants.js\";\nimport { easeFunctions } from \"../../ease.js\";\nimport { FXMasterFilterEffectMixin } from \"./mixins/filter.js\";\n\nexport class LightningFilter extends FXMasterFilterEffectMixin(PIXI.filters.AdjustmentFilter) {\n  constructor(options, id) {\n    super(options, id);\n    this.nextLigthningTime = canvas.app.ticker.lastTime / 10;\n  }\n\n  /**\n   * The time when the next lightning flash should appear.\n   * @type {number}\n   */\n  nextLigthningTime;\n\n  /** @override */\n  static label = \"FXMASTER.FilterEffectLightning\";\n\n  /** @override */\n  static icon = \"fas fa-bolt-lightning\";\n\n  /** @override */\n  static get parameters() {\n    return {\n      frequency: {\n        label: \"FXMASTER.Period\",\n        type: \"range\",\n        max: 2000,\n        min: 100,\n        step: 5,\n        value: 500,\n      },\n      spark_duration: {\n        label: \"FXMASTER.Duration\",\n        type: \"range\",\n        max: 2000,\n        min: 100,\n        step: 5,\n        value: 300,\n      },\n      brightness: {\n        label: \"FXMASTER.Brightness\",\n        type: \"range\",\n        max: 4.0,\n        min: 0.0,\n        step: 0.1,\n        value: 1.3,\n      },\n    };\n  }\n\n  /** @override */\n  static get neutral() {\n    return {\n      frequency: 0.0,\n      spark_duration: 0.0,\n      brightness: 1.0,\n    };\n  }\n\n  /** @override */\n  play(_options = {}) {\n    // explicitly not applying the options, since it would change the brightness immediately\n    this.enabled = true;\n  }\n\n  /** @override */\n  async step() {\n    if (canvas.app.ticker.lastTime / 10 > this.nextLigthningTime) {\n      this.nextLigthningTime = canvas.app.ticker.lastTime / 10 + 40 + this.options.frequency * Math.random();\n\n      const animate = (value) => {\n        const attributes = [\n          {\n            parent: this,\n            attribute: \"brightness\",\n            to: value,\n          },\n        ];\n        return CanvasAnimation.animate(attributes, {\n          name: `${packageId}.${this.constructor.name}.${this.id}.${randomID()}`,\n          context: this,\n          duration: 100 + this.options.spark_duration * Math.random(),\n          easing: easeFunctions.InOutBack,\n        });\n      };\n\n      await animate(this.options.brightness);\n      await animate(1);\n      await super.step();\n    }\n  }\n}\n","import { FXMasterFilterEffectMixin } from \"./mixins/filter.js\";\n\nexport class OldFilmFilter extends FXMasterFilterEffectMixin(PIXI.filters.OldFilmFilter) {\n  constructor(options, id) {\n    super(options, id);\n    this.vignetting = 0;\n    this.vignettingAlpha = 0;\n  }\n\n  /** @override */\n  static label = \"FXMASTER.FilterEffectOldFilm\";\n\n  /** @override */\n  static icon = \"fas fa-film\";\n\n  /** @override */\n  static get parameters() {\n    return {\n      sepia: {\n        label: \"FXMASTER.Sepia\",\n        type: \"range\",\n        max: 1.0,\n        min: 0.0,\n        step: 0.1,\n        value: 0.3,\n      },\n      noise: {\n        label: \"FXMASTER.Noise\",\n        type: \"range\",\n        max: 1.0,\n        min: 0.0,\n        step: 0.1,\n        value: 0.1,\n      },\n    };\n  }\n\n  /** @override */\n  static get neutral() {\n    return {\n      sepia: 0.0,\n      noise: 0.0,\n    };\n  }\n\n  /** @override */\n  play(options = {}) {\n    this.seed = Math.random();\n    super.play(options);\n  }\n\n  /** @override */\n  async step() {\n    this.seed = Math.random();\n    await super.step();\n  }\n}\n","import { FXMasterFilterEffectMixin } from \"./mixins/filter.js\";\n\nexport class PredatorFilter extends FXMasterFilterEffectMixin(PIXI.filters.CRTFilter) {\n  constructor(options, id) {\n    super(options, id);\n    this.vignetting = 0;\n    this.curvature = 0;\n  }\n\n  /** @override */\n  static label = \"FXMASTER.FilterEffectPredator\";\n\n  /** @override */\n  static icon = \"fas fa-wave-square\";\n\n  /** @override */\n  static get parameters() {\n    return {\n      noise: {\n        label: \"FXMASTER.Noise\",\n        type: \"range\",\n        max: 1.0,\n        min: 0,\n        step: 0.1,\n        value: 0.1,\n      },\n      period: {\n        label: \"FXMASTER.Speed\",\n        type: \"range\",\n        max: 0.1,\n        min: 0,\n        step: 0.001,\n        value: 0.001,\n      },\n      lineWidth: {\n        label: \"FXMASTER.LineWidth\",\n        type: \"range\",\n        max: 10,\n        min: 0,\n        step: 0.1,\n        value: 1,\n      },\n    };\n  }\n\n  /** @override */\n  static get neutral() {\n    return {\n      noise: 0,\n      period: 1000,\n    };\n  }\n\n  /** @override */\n  play(options = {}) {\n    this.seed = Math.random();\n    super.play(options);\n  }\n\n  /** @override */\n  async step() {\n    this.seed = Math.random();\n    const frequency = 1.0 / this.options.period;\n    this.time = canvas.app.ticker.lastTime / frequency;\n    await super.step();\n  }\n}\n","import { FXMasterFilterEffectMixin } from \"./mixins/filter.js\";\n\nexport class UnderwaterFilter extends FXMasterFilterEffectMixin(PIXI.filters.DisplacementFilter) {\n  constructor(options, id) {\n    const displacemenntMap = new PIXI.Sprite.from(\n      \"modules/fxmaster/assets/filter-effects/effects/underwater/displacement-map.png\",\n    );\n    super(options, id, displacemenntMap);\n\n    this.displacementMap = displacemenntMap;\n    this.displacementMap.texture.baseTexture.wrapMode = PIXI.WRAP_MODES.REPEAT;\n    this.displacementMap.anchor.set(0.5);\n    this.displacementMap.x = canvas.scene.width / 2;\n    this.displacementMap.y = canvas.scene.height / 2;\n  }\n\n  /** @override */\n  static label = \"FXMASTER.FilterEffectUnderwater\";\n\n  /** @override */\n  static icon = \"fas fa-water\";\n\n  static get parameters() {\n    return {\n      speed: {\n        label: \"FXMASTER.Speed\",\n        type: \"range\",\n        max: 5.0,\n        min: 0.0,\n        step: 0.1,\n        value: 0.3,\n      },\n      scale: {\n        label: \"FXMASTER.Scale\",\n        type: \"number\",\n        value: 4.0,\n      },\n    };\n  }\n\n  /** @override */\n  static get neutral() {\n    return {\n      speed: 0,\n      scale: 1.0,\n    };\n  }\n\n  /** @override */\n  applyOptions() {\n    // explicitly do nothing because setting scale / speed on this breaks the DisplacementFilter\n  }\n\n  /** @override */\n  play(options = {}) {\n    this.displacementMap.scale.x = this.options.scale;\n    this.displacementMap.scale.y = this.options.scale;\n    canvas.primary.addChild(this.displacementMap);\n    super.play(options);\n  }\n\n  /** @override */\n  async stop(options = {}) {\n    await super.stop(options);\n    canvas.primary.removeChild(this.displacementMap);\n  }\n\n  /** @override */\n  async step() {\n    this.maskSprite.x += this.options.speed;\n    await super.step();\n  }\n}\n","import { BloomFilter } from \"./filters/bloom.js\";\nimport { ColorFilter } from \"./filters/color.js\";\nimport { FogFilter } from \"./filters/fog.js\";\nimport { LightningFilter } from \"./filters/lightning.js\";\nimport { OldFilmFilter } from \"./filters/old-film.js\";\nimport { PredatorFilter } from \"./filters/predator.js\";\nimport { UnderwaterFilter } from \"./filters/underwater.js\";\n\n/** @typedef {Record<string, PIXI.Filter} FilterEffects */\n\n/** @type {FilterEffects} */\nexport const filterEffects = {\n  bloom: BloomFilter,\n  color: ColorFilter,\n  fog: FogFilter,\n  lightning: LightningFilter,\n  oldfilm: OldFilmFilter,\n  predator: PredatorFilter,\n  underwater: UnderwaterFilter,\n};\n","import { roundToDecimals } from \"../../utils.js\";\n\n/**\n * An abstract base class for defining particle-based effects\n * @param {PIXI.Container} parent     The parent container within which the effect is rendered\n * @param {object} [options]          Options passed to the getParticleEmitters method which can be used to customize\n *                                    values of the emitter configuration.\n * @abstract\n */\nexport class FXMasterParticleEffect extends ParticleEffect {\n  /**\n   * A human-readable label for the particle effect. This can be a localization string.\n   * @type {string}\n   * @override\n   */\n  static label = \"FXMASTER.ParticleEffect\";\n\n  /**\n   * The weather effect group this effect belongs to.\n   * @type {string}\n   */\n  static get group() {\n    return \"other\";\n  }\n\n  /** @type {string} */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/snow.png\";\n  }\n\n  static get parameters() {\n    return {\n      scale: {\n        label: \"FXMASTER.Scale\",\n        type: \"range\",\n        min: 0.1,\n        value: 1,\n        max: 5,\n        step: 0.1,\n        decimals: 1,\n      },\n      direction: {\n        label: \"FXMASTER.Direction\",\n        type: \"range\",\n        min: 0,\n        value: this.defaultDirection,\n        max: 360,\n        step: 5,\n        decimals: 0,\n      },\n      speed: {\n        label: \"FXMASTER.Speed\",\n        type: \"range\",\n        min: 0.1,\n        value: 1,\n        max: 5,\n        step: 0.1,\n        decimals: 1,\n      },\n      lifetime: {\n        label: \"FXMASTER.Lifetime\",\n        type: \"range\",\n        min: 0.1,\n        value: 1,\n        max: 5,\n        step: 0.1,\n        decimals: 1,\n      },\n      density: {\n        label: \"FXMASTER.Density\",\n        type: \"range\",\n        min: 0.1,\n        value: 0.5,\n        max: 5,\n        step: 0.1,\n        decimals: 1,\n      },\n      tint: {\n        label: \"FXMASTER.Tint\",\n        type: \"color\",\n        value: {\n          value: \"#FFFFFF\",\n          apply: false,\n        },\n      },\n    };\n  }\n\n  /**\n   * Merge the given options with the default parameters.\n   */\n  static mergeWithDefaults(options) {\n    return foundry.utils.mergeObject(this.parameters, options, { insertKeys: false, inplace: false });\n  }\n\n  /**\n   * Return the default config for this effect.\n   * @abstract\n   * @returns {PIXI.particles.EmitterConfigV3}\n   */\n  static get defaultConfig() {\n    throw new Error(\"Subclasses of FXMasterParticleEffect must implement defaultConfig\");\n  }\n\n  static get defaultDirection() {\n    const rotationBehavior = this.defaultConfig.behaviors.find((behavior) => behavior.type === \"rotation\");\n\n    if (rotationBehavior !== undefined) {\n      return (rotationBehavior.config.minStart + rotationBehavior.config.maxStart) / 2;\n    }\n\n    const rotationStaticBehavior = this.defaultConfig.behaviors.find((behavior) => behavior.type === \"rotationStatic\");\n\n    if (rotationStaticBehavior !== undefined) {\n      return (rotationStaticBehavior.config.min + rotationStaticBehavior.config.max) / 2;\n    }\n\n    return undefined;\n  }\n\n  static get default() {\n    return Object.fromEntries(\n      Object.entries(this.parameters).map(([parameterName, parameterConfig]) => [parameterName, parameterConfig.value]),\n    );\n  }\n\n  applyOptionsToConfig(options, config) {\n    this._applyScaleToConfig(options, config);\n    this._applySpeedToConfig(options, config);\n    this._applyDirectionToConfig(options, config);\n    this._applyLifetimeToConfig(options, config);\n    this._applyTintToConfig(options, config);\n  }\n\n  /** @protected */\n  _applyFactorToValueList(valueList, factor) {\n    valueList.list = valueList.list.map((valueStep) => ({\n      ...valueStep,\n      value: valueStep.value * factor,\n    }));\n  }\n\n  /** @protected */\n  _applyFactorToRandNumber(randNumber, factor) {\n    randNumber.min = randNumber.min * factor;\n    randNumber.max = randNumber.max * factor;\n  }\n\n  /** @protected */\n  _applyScaleToConfig(options, config) {\n    const factor = (options.scale?.value ?? 1) * (canvas.dimensions.size / 100);\n\n    config.behaviors\n      .filter((behavior) => behavior.type === \"scale\")\n      .forEach(({ config }) => this._applyFactorToValueList(config.scale, factor));\n\n    config.behaviors\n      .filter((behavior) => behavior.type === \"scaleStatic\")\n      .forEach(({ config }) => this._applyFactorToRandNumber(config, factor));\n  }\n\n  /** @protected */\n  _applySpeedToConfig(options, config) {\n    const factor = (options.speed?.value ?? 1) * (canvas.dimensions.size / 100);\n\n    config.behaviors\n      .filter((behavior) => [\"moveSpeed\", \"movePath\"].includes(behavior.type))\n      .forEach(({ config }) => this._applyFactorToValueList(config.speed, factor));\n\n    config.behaviors\n      .filter((behavior) => behavior.type === \"moveSpeedStatic\")\n      .forEach(({ config }) => this._applyFactorToRandNumber(config, factor));\n\n    this._applyFactorToRandNumber(config.lifetime, 1 / factor);\n    config.frequency /= factor;\n  }\n\n  /** @protected */\n  _applyDirectionToConfig(options, config) {\n    const direction = options.direction?.value;\n    if (direction !== undefined) {\n      config.behaviors\n        .filter((behavior) => behavior.type === \"rotation\")\n        .forEach(({ config }) => {\n          const range = config.maxStart - config.minStart;\n          config.minStart = direction - range / 2;\n          config.maxStart = direction + range / 2;\n        });\n\n      config.behaviors\n        .filter((behavior) => behavior.type === \"rotationStatic\")\n        .forEach(({ config }) => {\n          const range = config.max - config.min;\n          config.min = direction - range / 2;\n          config.max = direction + range / 2;\n        });\n    }\n  }\n\n  /** @protected */\n  _applyLifetimeToConfig(options, config) {\n    const factor = options.lifetime?.value ?? 1;\n    this._applyFactorToRandNumber(config.lifetime, factor);\n    config.frequency *= factor;\n  }\n\n  /** @protected */\n  _applyTintToConfig(options, config) {\n    if (options.tint?.value.apply) {\n      const value = options.tint.value.value;\n      config.behaviors = config.behaviors\n        .filter(({ type }) => type !== \"color\" && type !== \"colorStatic\")\n        .concat({\n          type: \"colorStatic\",\n          config: {\n            color: value,\n          },\n        });\n    }\n  }\n\n  /** @override */\n  play({ prewarm = false } = {}) {\n    if (prewarm) {\n      this.emitters.forEach((emitter) => {\n        emitter.autoUpdate = false;\n        emitter.emit = true;\n        emitter.update(emitter.maxLifetime);\n        emitter.autoUpdate = true;\n      });\n    }\n    super.play();\n  }\n\n  /**\n   * Fade this effect out, playing it once and then stopping it.\n   * @param {{timeout?: number}} [options]         Additional options to configure the fade out\n   * @param {number}             [options.timeout] If given, the effect will be stopped after the given number in ms,\n   *                                               regardless of if it has finished playing or not.\n   * @returns {Promise<void>}                      A promise that resolves as soon as this effect has finished fading out\n   */\n  async fadeOut({ timeout } = {}) {\n    const emitterPromises = this.emitters.map(\n      (emitter) =>\n        new Promise((resolve) => {\n          emitter.emitterLifetime = 0.1;\n          emitter.playOnceAndDestroy(() => {\n            resolve();\n          });\n        }),\n    );\n    const promises = [Promise.all(emitterPromises)];\n    if (timeout !== undefined) {\n      promises.push(new Promise((resolve) => setTimeout(resolve, timeout)).then(this.destroy.bind(this)));\n    }\n\n    await Promise.race(promises);\n    this.stop();\n  }\n\n  static convertOptionsToV2(options, scene) {\n    return Object.fromEntries(\n      Object.entries(options).map(([optionKey, optionValue]) => {\n        switch (optionKey) {\n          case \"scale\": {\n            return [optionKey, this._convertScaleToV2(optionValue, scene)];\n          }\n          case \"speed\": {\n            return [optionKey, this._convertSpeedToV2(optionValue, scene)];\n          }\n          case \"density\": {\n            return [optionKey, this._convertDensityToV2(optionValue, scene)];\n          }\n          default: {\n            return [optionKey, optionValue];\n          }\n        }\n      }),\n    );\n  }\n\n  /** @protected */\n  static _convertScaleToV2(scale, scene) {\n    const decimals = this.parameters.scale?.decimals ?? 1;\n    return roundToDecimals(scale * (100 / scene.dimensions.size), decimals);\n  }\n\n  /** @protected */\n  static _convertSpeedToV2(speed, scene) {\n    const speeds = this.defaultConfig.behaviors\n      .filter(({ type }) => type === \"moveSpeed\")\n      .flatMap(({ config }) => config.speed.list.map((valueStep) => valueStep.value));\n    const maximumSpeed = Math.max(...speeds);\n\n    const decimals = this.parameters.speed?.decimals ?? 1;\n    return roundToDecimals((speed / maximumSpeed) * (100 / scene.dimensions.size), decimals);\n  }\n\n  /** @protected */\n  static _convertDensityToV2(density, scene) {\n    const d = scene.dimensions;\n    const gridUnits = (d.width / d.size) * (d.height / d.size);\n\n    const decimals = this.parameters.density?.decimals ?? 1;\n    return roundToDecimals(density / gridUnits, decimals);\n  }\n}\n","/**\n * A mixin which extends {@link FXMasterParticleEffect} with default rectangle spawing behavior.\n * @param {typeof import(\"../effect.js\").FXMasterParticleEffect} Base The base effect class which this mixin extends\n * @returns {import(\"../effect.js\").FXMasterParticleEffect} The extended effect class\n */\nexport function DefautlRectangleSpawnMixin(Base) {\n  return class extends Base {\n    /** @override */\n    getParticleEmitters(options = {}) {\n      options = this.constructor.mergeWithDefaults(options);\n      const d = canvas.dimensions;\n      const maxParticles = (d.width / d.size) * (d.height / d.size) * options.density.value;\n      const config = foundry.utils.deepClone(this.constructor.defaultConfig);\n      config.maxParticles = maxParticles;\n      config.frequency = config.lifetime.min / maxParticles;\n      config.behaviors.push({\n        type: \"spawnShape\",\n        config: {\n          type: \"rect\",\n          data: { x: d.sceneRect.x, y: d.sceneRect.y, w: d.sceneRect.width, h: d.sceneRect.height },\n        },\n      });\n      this.applyOptionsToConfig(options, config);\n\n      return [this.createEmitter(config)];\n    }\n  };\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\nimport { DefautlRectangleSpawnMixin } from \"./mixins/default-retangle-spawn.js\";\n\n/**\n * A full-screen particle effect which renders crawling spiders.\n */\nexport class SpiderParticleEffect extends DefautlRectangleSpawnMixin(FXMasterParticleEffect) {\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectSpiders\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/spiders.png\";\n  }\n\n  /** @override */\n  static get group() {\n    return \"animals\";\n  }\n\n  /** @override */\n  static get parameters() {\n    return foundry.utils.mergeObject(\n      super.parameters,\n      {\n        density: { min: 0.05, value: 0.3, max: 0.7, step: 0.05, decimals: 2 },\n        \"-=direction\": null,\n      },\n      { performDeletions: true },\n    );\n  }\n\n  /**\n   * Configuration for the particle emitter for crawling spiders\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static SPIDERS_CONFIG = {\n    lifetime: { min: 5, max: 10 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { value: 0, time: 0 },\n              { value: 1, time: 0.02 },\n              { value: 1, time: 0.98 },\n              { value: 0, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"moveSpeed\",\n        config: {\n          speed: {\n            list: [\n              { time: 0, value: 15 },\n              { time: 1, value: 25 },\n            ],\n          },\n          minMult: 0.6,\n        },\n      },\n      {\n        type: \"scale\",\n        config: {\n          scale: {\n            list: [\n              { value: 0.05, time: 0 },\n              { value: 0.08, time: 0.05 },\n              { value: 0.08, time: 0.95 },\n              { value: 0.05, time: 1 },\n            ],\n          },\n          minMult: 0.2,\n        },\n      },\n      {\n        type: \"rotationStatic\",\n        config: { min: 0, max: 359 },\n      },\n      {\n        type: \"animatedSingle\",\n        config: {\n          anim: {\n            framerate: 30,\n            loop: true,\n            textures: Array.fromRange(25).map((n) => ({\n              count: 1,\n              texture: `modules/fxmaster/assets/particle-effects/effects/spiders/spider${String(n + 1).padStart(\n                2,\n                \"0\",\n              )}.png`,\n            })),\n          },\n        },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.SPIDERS_CONFIG;\n  }\n}\n","/**\n * Adjust the color behavior of an emitter to use a stepped gradient instead of interpolation.\n * @param {PIXI.particles.Emitter} emitter        The emitter to adjust\n * @param {PIXI.particles.EmitterConfigV3} config The emitter config containing the original value list\n * @param {number} [steps=10]                     The number of steps to use\n * @returns {PIXI.particles.Emitter}\n */\nexport function withSteppedGradientColor(emitter, config, steps = 10) {\n  const colorBehavior = emitter.getBehavior(\"color\");\n\n  if (colorBehavior) {\n    emitter\n      .getBehavior(\"color\")\n      .list.reset(\n        PIXI.particles.ParticleUtils.createSteppedGradient(\n          config.behaviors.find(({ type }) => type === \"color\").config.color.list,\n          steps,\n        ),\n      );\n  }\n\n  return emitter;\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\nimport { withSteppedGradientColor } from \"./helpers/with-stepped-gradient-color.js\";\n/**\n * A full-screen particle effect which renders drifting stars.\n */\nexport class StarsParticleEffect extends FXMasterParticleEffect {\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectStars\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/stars.png\";\n  }\n\n  /** @override */\n  static get parameters() {\n    return foundry.utils.mergeObject(\n      super.parameters,\n      {\n        density: { min: 0.05, value: 0.3, max: 1, step: 0.05, decimals: 2 },\n        tint: { value: { value: \"#bee8ee\" } },\n        \"-=direction\": null,\n      },\n      { performDeletions: true },\n    );\n  }\n\n  /**\n   * Configuration for the particle emitter for drifting stars\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static STARS_CONFIG = {\n    lifetime: { min: 8, max: 15 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { value: 0, time: 0 },\n              { value: 0.9, time: 0.3 },\n              { value: 0.9, time: 0.95 },\n              { value: 0, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"moveSpeedStatic\",\n        config: { min: 3, max: 5 },\n      },\n      {\n        type: \"scale\",\n        config: {\n          scale: {\n            list: [\n              { value: 0.05, time: 0 },\n              { value: 0.03, time: 1 },\n            ],\n          },\n          minMult: 0.85,\n        },\n      },\n      {\n        type: \"rotation\",\n        config: { accel: 0, minSpeed: 20, maxSpeed: 50, minStart: 0, maxStart: 365 },\n      },\n      {\n        type: \"textureRandom\",\n        config: {\n          textures: Array.fromRange(8).map(\n            (n) => `modules/fxmaster/assets/particle-effects/effects/stars/star${n + 1}.png`,\n          ),\n        },\n      },\n      {\n        type: \"color\",\n        config: {\n          color: {\n            list: [\n              { value: \"bee8ee\", time: 0 },\n              { value: \"d0e8ec\", time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"blendMode\",\n        config: {\n          blendMode: \"screen\",\n        },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.STARS_CONFIG;\n  }\n\n  /** @override */\n  getParticleEmitters(options = {}) {\n    options = this.constructor.mergeWithDefaults(options);\n    const d = canvas.dimensions;\n    const maxParticles = (d.width / d.size) * (d.height / d.size) * options.density.value;\n    const config = foundry.utils.deepClone(this.constructor.STARS_CONFIG);\n    config.maxParticles = maxParticles;\n    config.frequency = config.lifetime.min / maxParticles;\n    config.behaviors.push({\n      type: \"spawnShape\",\n      config: {\n        type: \"rect\",\n        data: { x: d.sceneRect.x, y: d.sceneRect.y, w: d.sceneRect.width, h: d.sceneRect.height },\n      },\n    });\n    this.applyOptionsToConfig(options, config);\n\n    const emitter = withSteppedGradientColor(this.createEmitter(config), config);\n    return [emitter];\n  }\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\nimport { DefautlRectangleSpawnMixin } from \"./mixins/default-retangle-spawn.js\";\n\n/**\n * A full-screen particle effect which renders gently falling autumn leaves.\n */\nexport class AutumnLeavesParticleEffect extends DefautlRectangleSpawnMixin(FXMasterParticleEffect) {\n  /** @override */\n  static label = \"WEATHER.AutumnLeaves\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/leaves.png\";\n  }\n\n  /** @override */\n  static get group() {\n    return \"weather\";\n  }\n\n  /** @override */\n  static get parameters() {\n    return foundry.utils.mergeObject(\n      super.parameters,\n      {\n        density: { min: 0.05, value: 0.25, max: 1, step: 0.05, decimals: 2 },\n        \"-=direction\": null,\n      },\n      { performDeletions: true },\n    );\n  }\n\n  /**\n   * Configuration for the particle emitter for falling leaves\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static LEAF_CONFIG = {\n    lifetime: { min: 10, max: 10 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { time: 0, value: 0.9 },\n              { time: 1, value: 0.5 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"moveSpeed\",\n        config: {\n          speed: {\n            list: [\n              { time: 0, value: 20 },\n              { time: 1, value: 60 },\n            ],\n          },\n          minMult: 0.6,\n        },\n      },\n      {\n        type: \"scale\",\n        config: {\n          scale: {\n            list: [\n              { time: 0, value: 0.2 },\n              { time: 1, value: 0.4 },\n            ],\n          },\n          minMult: 0.5,\n        },\n      },\n      {\n        type: \"rotation\",\n        config: { accel: 0, minSpeed: 100, maxSpeed: 200, minStart: 0, maxStart: 365 },\n      },\n      {\n        type: \"textureRandom\",\n        config: {\n          textures: Array.fromRange(6).map((n) => `ui/particles/leaf${n + 1}.png`),\n        },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.LEAF_CONFIG;\n  }\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\nimport { DefautlRectangleSpawnMixin } from \"./mixins/default-retangle-spawn.js\";\n\n/**\n * A full-screen particle effect which renders flying bats.\n */\nexport class BatsParticleEffect extends DefautlRectangleSpawnMixin(FXMasterParticleEffect) {\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectBats\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/bats.png\";\n  }\n\n  /** @override */\n  static get group() {\n    return \"animals\";\n  }\n\n  /** @override */\n  static get parameters() {\n    return foundry.utils.mergeObject(\n      super.parameters,\n      {\n        density: { min: 0.005, value: 0.05, max: 0.1, step: 0.005, decimals: 3 },\n        \"-=direction\": null,\n      },\n      { performDeletions: true },\n    );\n  }\n\n  /**\n   * Configuration for the particle emitter for flying bats\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static BATS_CONFIG = {\n    lifetime: { min: 20, max: 40 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { value: 0, time: 0 },\n              { value: 1, time: 0.02 },\n              { value: 1, time: 0.98 },\n              { value: 0, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"moveSpeed\",\n        config: {\n          speed: {\n            list: [\n              { time: 0, value: 200 },\n              { time: 1, value: 260 },\n            ],\n          },\n          minMult: 0.8,\n        },\n      },\n      {\n        type: \"scale\",\n        config: {\n          scale: {\n            list: [\n              { value: 0.02, time: 0 },\n              { value: 0.1, time: 0.05 },\n              { value: 0.1, time: 0.95 },\n              { value: 0.02, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"rotationStatic\",\n        config: { min: 0, max: 359 },\n      },\n      {\n        type: \"animatedSingle\",\n        config: {\n          anim: {\n            framerate: 30,\n            loop: true,\n            textures: [\n              { texture: 1, count: 1 },\n              { texture: 2, count: 1 },\n              { texture: 3, count: 1 },\n              { texture: 4, count: 1 },\n              { texture: 5, count: 2 },\n              { texture: 4, count: 1 },\n              { texture: 3, count: 1 },\n              { texture: 2, count: 1 },\n            ].map(({ texture, count }) => ({\n              texture: `modules/fxmaster/assets/particle-effects/effects/bats/bat${texture}.png`,\n              count,\n            })),\n          },\n        },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.BATS_CONFIG;\n  }\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\nimport { DefautlRectangleSpawnMixin } from \"./mixins/default-retangle-spawn.js\";\n\n/**\n * A full-screen particle effect which renders floating bubbles.\n */\nexport class BubblesParticleEffect extends DefautlRectangleSpawnMixin(FXMasterParticleEffect) {\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectBubbles\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/bubbles.png\";\n  }\n\n  /** @override */\n  static get parameters() {\n    return foundry.utils.mergeObject(\n      super.parameters,\n      {\n        density: { min: 0.01, value: 0.15, max: 0.5, step: 0.01, decimals: 2 },\n        \"-=direction\": null,\n      },\n      { performDeletions: true },\n    );\n  }\n\n  /**\n   * Configuration for the particle emitter for floating bubbles\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static BUBBLES_CONFIG = {\n    lifetime: { min: 8, max: 10 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { value: 0, time: 0 },\n              { value: 0.85, time: 0.05 },\n              { value: 0.85, time: 0.98 },\n              { value: 0, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"moveSpeed\",\n        config: {\n          speed: {\n            list: [\n              { time: 0, value: 20 },\n              { time: 1, value: 60 },\n            ],\n          },\n          minMult: 0.6,\n        },\n      },\n      {\n        type: \"scale\",\n        config: {\n          scale: {\n            list: [\n              { value: 0.25, time: 0 },\n              { value: 0.5, time: 1 },\n            ],\n          },\n          minMult: 0.5,\n        },\n      },\n      {\n        type: \"rotation\",\n        config: { accel: 0, minSpeed: 100, maxSpeed: 200, minStart: 0, maxStart: 365 },\n      },\n      {\n        type: \"textureSingle\",\n        config: { texture: \"modules/fxmaster/assets/particle-effects/effects/bubbles/bubble.png\" },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.BUBBLES_CONFIG;\n  }\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\n\n/**\n * A full-screen particle effect which renders drifting bubbles.\n */\nexport class CloudsParticleEffect extends FXMasterParticleEffect {\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectClouds\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/clouds.png\";\n  }\n\n  /** @override */\n  static get group() {\n    return \"weather\";\n  }\n\n  /** @override */\n  static get parameters() {\n    return foundry.utils.mergeObject(super.parameters, {\n      density: { min: 0.001, value: 0.03, max: 0.2, step: 0.001, decimals: 3 },\n    });\n  }\n\n  /**\n   * Configuration for the particle emitter for drifting clouds\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static CLOUDS_CONFIG = {\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { value: 0, time: 0 },\n              { value: 0.5, time: 0.05 },\n              { value: 0.5, time: 0.95 },\n              { value: 0, time: 1 },\n            ],\n          },\n        },\n      },\n      { type: \"moveSpeedStatic\", config: { min: 30, max: 100 } },\n      { type: \"scaleStatic\", config: { min: 0.08, max: 0.8 } },\n      { type: \"rotationStatic\", config: { min: 80, max: 100 } },\n      {\n        type: \"textureRandom\",\n        config: {\n          textures: Array.fromRange(4).map(\n            (n) => `modules/fxmaster/assets/particle-effects/effects/clouds/cloud${n + 1}.png`,\n          ),\n        },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.CLOUDS_CONFIG;\n  }\n\n  /** @override */\n  getParticleEmitters(options = {}) {\n    options = this.constructor.mergeWithDefaults(options);\n    const d = canvas.dimensions;\n    const maxParticles = (d.width / d.size) * (d.height / d.size) * options.density.value;\n\n    const offsetFactor = 2 / 3;\n    const config = foundry.utils.deepClone(this.constructor.CLOUDS_CONFIG);\n    const speed = config.behaviors.find(({ type }) => type === \"moveSpeedStatic\")?.config;\n    if (speed === undefined) {\n      throw new Error(\"Expected CLOUDS_CONFIG to have a moveSpeedStatic behavior but it didn't.\");\n    }\n\n    const diagonal = Math.sqrt(d.sceneRect.width * d.sceneRect.width + d.sceneRect.height * d.sceneRect.height);\n    const averageSpeed = (speed.min + speed.max) / 2;\n    const averageDiagonalTime = diagonal / averageSpeed;\n    const minLifetime = averageDiagonalTime / offsetFactor / 2;\n    const maxLifetime = averageDiagonalTime / offsetFactor;\n\n    const angle = Math.toRadians(options.direction.value);\n    const directionVector = {\n      x: Math.cos(angle),\n      y: Math.sin(angle),\n    };\n\n    config.maxParticles = maxParticles;\n    config.frequency = (minLifetime + maxLifetime) / 2 / maxParticles;\n    config.lifetime = { min: minLifetime, max: maxLifetime };\n    config.behaviors.push({\n      type: \"spawnShape\",\n      config: {\n        type: \"rect\",\n        data: {\n          x: d.sceneRect.x - directionVector.x * d.sceneRect.width * offsetFactor,\n          y: d.sceneRect.y - directionVector.y * d.sceneRect.height * offsetFactor,\n          w: d.sceneRect.width,\n          h: d.sceneRect.height,\n        },\n      },\n    });\n    this.applyOptionsToConfig(options, config);\n\n    return [this.createEmitter(config)];\n  }\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\nimport { DefautlRectangleSpawnMixin } from \"./mixins/default-retangle-spawn.js\";\n\n/**\n * A full-screen particle effect which renders flying crows.\n */\nexport class CrowsParticleEffect extends DefautlRectangleSpawnMixin(FXMasterParticleEffect) {\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectCrows\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/crows.png\";\n  }\n\n  /** @override */\n  static get group() {\n    return \"animals\";\n  }\n\n  /** @override */\n  static get parameters() {\n    return foundry.utils.mergeObject(\n      super.parameters,\n      {\n        density: { min: 0.001, value: 0.006, max: 0.01, step: 0.001, decimals: 3 },\n        \"-=direction\": null,\n      },\n      { performDeletions: true },\n    );\n  }\n\n  /**\n   * Configuration for the particle emitter for flying crows\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static CROWS_CONFIG = {\n    lifetime: { min: 20, max: 40 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { value: 0, time: 0 },\n              { value: 1, time: 0.02 },\n              { value: 1, time: 0.98 },\n              { value: 0, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"moveSpeed\",\n        config: {\n          speed: {\n            list: [\n              { time: 0, value: 90 },\n              { time: 1, value: 100 },\n            ],\n          },\n          minMult: 0.6,\n        },\n      },\n      {\n        type: \"scale\",\n        config: {\n          scale: {\n            list: [\n              { value: 0.03, time: 0 },\n              { value: 0.12, time: 0.1 },\n              { value: 0.12, time: 0.9 },\n              { value: 0.03, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"rotationStatic\",\n        config: { min: 0, max: 359 },\n      },\n      {\n        type: \"animatedSingle\",\n        config: {\n          anim: {\n            framerate: 15,\n            loop: true,\n            textures: [\n              { texture: 1, count: 20 },\n              { texture: 2, count: 3 },\n              { texture: 3, count: 2 },\n              { texture: 4, count: 2 },\n              { texture: 3, count: 2 },\n              { texture: 2, count: 3 },\n            ].map(({ texture, count }) => ({\n              texture: `modules/fxmaster/assets/particle-effects/effects/crows/crow${texture}.png`,\n              count,\n            })),\n          },\n        },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.CROWS_CONFIG;\n  }\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\nimport { DefautlRectangleSpawnMixin } from \"./mixins/default-retangle-spawn.js\";\n\n/**\n * A full-screen particle effect which renders swirling fog.\n */\nexport class FogParticleEffect extends DefautlRectangleSpawnMixin(FXMasterParticleEffect) {\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectFog\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/fog.png\";\n  }\n\n  /** @override */\n  static get group() {\n    return \"weather\";\n  }\n\n  /** @override */\n  static get parameters() {\n    return foundry.utils.mergeObject(\n      super.parameters,\n      {\n        density: { min: 0.01, value: 0.08, max: 0.15, step: 0.01, decimals: 2 },\n        \"-=direction\": null,\n      },\n      { performDeletions: true },\n    );\n  }\n\n  /**\n   * Configuration for the particle emitter for swirling fog\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static FOG_CONFIG = {\n    lifetime: { min: 10, max: 25 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { value: 0, time: 0 },\n              { value: 0.1, time: 0.1 },\n              { value: 0.3, time: 0.5 },\n              { value: 0.1, time: 0.9 },\n              { value: 0, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"moveSpeed\",\n        config: {\n          speed: {\n            list: [\n              { time: 0, value: 15 },\n              { time: 1, value: 10 },\n            ],\n          },\n          minMult: 0.2,\n        },\n      },\n      {\n        type: \"scale\",\n        config: {\n          scale: {\n            list: [\n              { value: 1.5, time: 0 },\n              { value: 1, time: 1 },\n            ],\n          },\n          minMult: 0.5,\n        },\n      },\n      {\n        type: \"rotation\",\n        config: { accel: 0, minSpeed: 0.15, maxSpeed: 0.35, minStart: 0, maxStart: 365 },\n      },\n      {\n        type: \"textureRandom\",\n        config: {\n          textures: Array.fromRange(4).map(\n            (n) => `modules/fxmaster/assets/particle-effects/effects/clouds/cloud${n + 1}.png`,\n          ),\n        },\n      },\n      {\n        type: \"colorStatic\",\n        config: {\n          color: \"dddddd\",\n        },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.FOG_CONFIG;\n  }\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\nimport { DefautlRectangleSpawnMixin } from \"./mixins/default-retangle-spawn.js\";\n\n/**\n * A full-screen particle effect which renders scurrying rats.\n */\nexport class RatsParticleEffect extends DefautlRectangleSpawnMixin(FXMasterParticleEffect) {\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectRats\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/rats.png\";\n  }\n\n  /** @override */\n  static get group() {\n    return \"animals\";\n  }\n\n  /** @override */\n  static get parameters() {\n    return foundry.utils.mergeObject(\n      super.parameters,\n      {\n        density: { min: 0.001, value: 0.006, max: 0.1, step: 0.001, decimals: 3 },\n        \"-=direction\": null,\n      },\n      { performDeletions: true },\n    );\n  }\n\n  /**\n   * Configuration for the particle emitter for scurrying rats\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static RATS_CONFIG = {\n    lifetime: { min: 20, max: 40 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { value: 0, time: 0 },\n              { value: 1, time: 0.02 },\n              { value: 1, time: 0.98 },\n              { value: 0, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"moveSpeedStatic\",\n        config: { min: 120, max: 200 },\n      },\n      {\n        type: \"scale\",\n        config: {\n          scale: {\n            list: [\n              { value: 0.03, time: 0 },\n              { value: 0.125, time: 0.1 },\n              { value: 0.125, time: 0.9 },\n              { value: 0.03, time: 1 },\n            ],\n          },\n          minMult: 0.5,\n        },\n      },\n      {\n        type: \"rotationStatic\",\n        config: { min: 0, max: 359 },\n      },\n      {\n        type: \"animatedSingle\",\n        config: {\n          anim: {\n            framerate: \"10\",\n            loop: true,\n            textures: Array.fromRange(5).map(\n              (n) => `modules/fxmaster/assets/particle-effects/effects/rats/rat${n + 1}.png`,\n            ),\n          },\n        },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.RATS_CONFIG;\n  }\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\n\n/**\n * A full-screen particle effect which renders heavy snow fall.\n */\nexport class SnowstormParticleEffect extends FXMasterParticleEffect {\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectSnowstorm\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/snow-storm.png\";\n  }\n\n  /** @override */\n  static get group() {\n    return \"weather\";\n  }\n\n  /** @override */\n  static get parameters() {\n    return foundry.utils.mergeObject(super.parameters, {\n      density: { min: 0.05, value: 0.6, max: 1, step: 0.05, decimals: 2 },\n    });\n  }\n\n  /**\n   * Configuration for the particle emitter for heavy snow fall\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static SNOWSTORM_CONFIG = {\n    lifetime: { min: 2.5, max: 6 },\n    behaviors: [\n      {\n        type: \"alphaStatic\",\n        config: { alpha: 1 },\n      },\n      {\n        type: \"movePath\",\n        config: {\n          path: \"sin(x / 150) * 25\",\n          speed: {\n            list: [\n              { value: 400, time: 0 },\n              { value: 350, time: 1 },\n            ],\n          },\n          minMult: 0.2,\n        },\n      },\n      {\n        type: \"scale\",\n        config: {\n          scale: {\n            list: [\n              { value: 0.2, time: 0 },\n              { value: 0.08, time: 1 },\n            ],\n          },\n          minMult: 0.8,\n        },\n      },\n      {\n        type: \"rotation\",\n        config: { accel: 0, minSpeed: -60, maxSpeed: 60, minStart: 86, maxStart: 94 },\n      },\n      {\n        type: \"textureRandom\",\n        config: {\n          textures: Array.fromRange(2).map(\n            (n) => `modules/fxmaster/assets/particle-effects/effects/snowstorm/snow${n + 1}.png`,\n          ),\n        },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.SNOWSTORM_CONFIG;\n  }\n\n  /** @override */\n  getParticleEmitters(options = {}) {\n    options = this.constructor.mergeWithDefaults(options);\n    const d = canvas.dimensions;\n    const maxParticles = (d.width / d.size) * (d.height / d.size) * options.density.value;\n    const config = foundry.utils.deepClone(this.constructor.defaultConfig);\n    config.maxParticles = maxParticles;\n    config.frequency = (config.lifetime.min + config.lifetime.max) / 2 / maxParticles;\n    config.behaviors.push({\n      type: \"spawnShape\",\n      config: {\n        type: \"rect\",\n        data: { x: d.sceneRect.x, y: d.sceneRect.y, w: d.sceneRect.width, h: d.sceneRect.height },\n      },\n    });\n    this.applyOptionsToConfig(options, config);\n\n    return [this.createEmitter(config)];\n  }\n}\n","import { SpiderParticleEffect } from \"./effects/spiders.js\";\nimport { StarsParticleEffect } from \"./effects/stars.js\";\nimport { AutumnLeavesParticleEffect } from \"./effects/leaves.js\";\nimport { BatsParticleEffect } from \"./effects/bats.js\";\nimport { BirdsParticleEffect } from \"./effects/birds.js\";\nimport { BubblesParticleEffect } from \"./effects/bubbles.js\";\nimport { CloudsParticleEffect } from \"./effects/clouds.js\";\nimport { CrowsParticleEffect } from \"./effects/crows.js\";\nimport { EaglesParticleEffect } from \"./effects/eagles.js\";\nimport { EmbersParticleEffect } from \"./effects/embers.js\";\nimport { FogParticleEffect } from \"./effects/fog.js\";\nimport { RainParticleEffect } from \"./effects/rain.js\";\nimport { RainSimpleParticleEffect } from \"./effects/rain-simple.js\";\nimport { RainTopParticleEffect } from \"./effects/rain-top.js\";\nimport { RatsParticleEffect } from \"./effects/rats.js\";\nimport { SnowParticleEffect } from \"./effects/snow.js\";\nimport { SnowstormParticleEffect } from \"./effects/snowstorm.js\";\n\n/** @typedef {Record<string, typeof import(\"./effects/effect.js\").FXMasterParticleEffect>} ParticleEffects */\n\n/** @type {ParticleEffects} */\nexport const particleEffects = {\n  bats: BatsParticleEffect,\n  birds: BirdsParticleEffect,\n  crows: CrowsParticleEffect,\n  eagles: EaglesParticleEffect,\n  rats: RatsParticleEffect,\n  spiders: SpiderParticleEffect,\n\n  bubbles: BubblesParticleEffect,\n  embers: EmbersParticleEffect,\n  stars: StarsParticleEffect,\n\n  leaves: AutumnLeavesParticleEffect,\n  clouds: CloudsParticleEffect,\n  fog: FogParticleEffect,\n  rain: RainParticleEffect,\n  raintop: RainTopParticleEffect,\n  rainsimple: RainSimpleParticleEffect,\n  snow: SnowParticleEffect,\n  snowstorm: SnowstormParticleEffect,\n};\n","import { filterEffects } from \"./filter-effects/filter-effects-db.js\";\nimport { particleEffects } from \"./particle-effects/particle-effects-db.js\";\nimport { specialEffects } from \"./special-effects/special-effects-db.js\";\n\nexport const FXMASTER = {\n  filterEffects,\n  particleEffects,\n  specialEffects,\n};\n","import { FXMasterParticleEffect } from \"./effect.js\";\n\n/**\n * A full-screen particle effect which renders flying birds.\n */\nexport class BirdsParticleEffect extends FXMasterParticleEffect {\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectBirds\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/crows.png\";\n  }\n\n  /** @override */\n  static get group() {\n    return \"animals\";\n  }\n\n  /** @override */\n  static get parameters() {\n    return foundry.utils.mergeObject(\n      super.parameters,\n      {\n        density: { min: 0.001, value: 0.006, max: 0.01, step: 0.001, decimals: 3 },\n        \"-=direction\": null,\n        animations: {\n          label: \"FXMASTER.Animations\",\n          type: \"multi-select\",\n          options: {\n            glide: \"FXMASTER.ParicleEffectBirdsAnimationsGlide\",\n            flap: \"FXMASTER.ParicleEffectBirdsAnimationsFlap\",\n            mixed: \"FXMASTER.ParicleEffectBirdsAnimationsMixed\",\n          },\n          value: [\"mixed\"],\n        },\n      },\n      { performDeletions: true },\n    );\n  }\n\n  /**\n   * Configuration for the particle emitter for flying birds\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static BIRDS_CONFIG = {\n    lifetime: { min: 20, max: 40 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { value: 0, time: 0 },\n              { value: 1, time: 0.02 },\n              { value: 1, time: 0.98 },\n              { value: 0, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"moveSpeed\",\n        config: {\n          speed: {\n            list: [\n              { time: 0, value: 90 },\n              { time: 1, value: 100 },\n            ],\n          },\n          minMult: 0.6,\n        },\n      },\n      {\n        type: \"scale\",\n        config: {\n          scale: {\n            list: [\n              { value: 0.3, time: 0 },\n              { value: 0.7, time: 0.1 },\n              { value: 0.7, time: 0.9 },\n              { value: 0.3, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"rotationStatic\",\n        config: { min: 0, max: 359 },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.BIRDS_CONFIG;\n  }\n\n  /** @override */\n  getParticleEmitters(options = {}) {\n    options = this.constructor.mergeWithDefaults(options);\n    const d = canvas.dimensions;\n    const maxParticles = (d.width / d.size) * (d.height / d.size) * options.density.value;\n    const config = foundry.utils.deepClone(this.constructor.BIRDS_CONFIG);\n    config.maxParticles = maxParticles;\n    config.frequency = config.lifetime.min / maxParticles;\n    config.behaviors.push({\n      type: \"spawnShape\",\n      config: {\n        type: \"rect\",\n        data: { x: d.sceneRect.x, y: d.sceneRect.y, w: d.sceneRect.width, h: d.sceneRect.height },\n      },\n    });\n    config.behaviors.push({\n      type: \"animatedRandom\",\n      config: {\n        anims: this._getAnimations(options),\n      },\n    });\n    this.applyOptionsToConfig(options, config);\n\n    return [this.createEmitter(config)];\n  }\n\n  /**\n   * Get the animation to use for this effect.\n   * @returns The animations to use for the effect\n   * @protected\n   */\n  _getAnimations(options) {\n    const animations = {\n      glide: [\n        { textureNumber: 2, count: 30 },\n        ...Array(4)\n          .fill([\n            { texture: 1, count: 3 },\n            { texture: 2, count: 2 },\n            { texture: 3, count: 3 },\n            { texture: 2, count: 2 },\n          ])\n          .deepFlatten(),\n        { texture: 2, count: 68 },\n      ],\n      flap: [\n        { texture: 1, count: 3 },\n        { texture: 2, count: 2 },\n        { texture: 3, count: 3 },\n        { texture: 2, count: 2 },\n      ],\n      mixed: [\n        { texture: 2, count: 7 },\n        { texture: 1, count: 3 },\n        { texture: 2, count: 2 },\n        { texture: 3, count: 3 },\n        { texture: 2, count: 7 },\n      ],\n    };\n\n    const getAnim = (animation) => ({\n      framerate: 20,\n      loop: true,\n      textures: animation.map(({ texture, count }) => ({\n        texture: `modules/fxmaster/assets/particle-effects/effects/birds/bird${texture}.png`,\n        count,\n      })),\n    });\n\n    const anims = (options.animations?.value ?? [])\n      .filter((animation) => Object.keys(animations).includes(animation))\n      .map((animation) => getAnim(animations[animation]));\n\n    if (anims.length === 0) {\n      anims.push(getAnim(animations.mixed));\n    }\n\n    return anims;\n  }\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\n\n/**\n * A full-screen particle effect which renders flying eagles.\n */\nexport class EaglesParticleEffect extends FXMasterParticleEffect {\n  /**\n   * The cached textures for this weather effect.\n   * @type {PIXI.Texture[] | undefined}\n   * @private\n   */\n  static _textureCache;\n\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectEagles\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/crows.png\";\n  }\n\n  /** @override */\n  static get group() {\n    return \"animals\";\n  }\n\n  /** @override */\n  static get parameters() {\n    return foundry.utils.mergeObject(\n      super.parameters,\n      {\n        density: { min: 0.0005, value: 0.002, max: 0.01, step: 0.0005, decimals: 4 },\n        \"-=direction\": null,\n        animations: {\n          label: \"FXMASTER.Animations\",\n          type: \"multi-select\",\n          options: {\n            flap: \"FXMASTER.ParicleEffectBirdsAnimationsFlap\",\n            glide: \"FXMASTER.ParicleEffectBirdsAnimationsGlide\",\n          },\n          value: [\"glide\"],\n        },\n      },\n      { performDeletions: true },\n    );\n  }\n\n  /**\n   * Configuration for the particle emitter for flying eagles\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static EAGLES_CONFIG = {\n    lifetime: { min: 7, max: 14 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { value: 0, time: 0 },\n              { value: 1, time: 0.02 },\n              { value: 1, time: 0.98 },\n              { value: 0, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"moveSpeed\",\n        config: {\n          speed: {\n            list: [\n              { time: 0, value: 360 },\n              { time: 1, value: 400 },\n            ],\n          },\n          minMult: 0.6,\n        },\n      },\n      {\n        type: \"scale\",\n        config: {\n          scale: {\n            list: [\n              { value: 0.15, time: 0 },\n              { value: 0.3, time: 0.1 },\n              { value: 0.3, time: 0.9 },\n              { value: 0.15, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"rotationStatic\",\n        config: { min: 0, max: 359 },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.EAGLES_CONFIG;\n  }\n\n  /** @override */\n  getParticleEmitters(options = {}) {\n    options = this.constructor.mergeWithDefaults(options);\n    const d = canvas.dimensions;\n    const maxParticles = (d.width / d.size) * (d.height / d.size) * options.density.value;\n    const config = foundry.utils.deepClone(this.constructor.EAGLES_CONFIG);\n    config.maxParticles = maxParticles;\n    config.frequency = config.lifetime.min / maxParticles;\n    config.behaviors.push({\n      type: \"spawnShape\",\n      config: {\n        type: \"rect\",\n        data: { x: d.sceneRect.x, y: d.sceneRect.y, w: d.sceneRect.width, h: d.sceneRect.height },\n      },\n    });\n    config.behaviors.push({\n      type: \"animatedRandom\",\n      config: {\n        anims: this._getAnimations(options),\n      },\n    });\n    this.applyOptionsToConfig(options, config);\n\n    return [this.createEmitter(config)];\n  }\n\n  /**\n   * Get the animation to use for this effect.\n   * @returns The animations to use for the effect\n   * @protected\n   */\n  _getAnimations(options) {\n    if (!this._textures) {\n      this._initializeTextures();\n    }\n\n    const flap = Array.fromRange(19).map((textureNumber) => ({\n      textureNumber,\n      count: 1,\n    }));\n\n    const glide = [\n      { textureNumber: 0, count: 30 },\n      ...Array(4).fill(flap).deepFlatten(),\n      { textureNumber: 0, count: 68 },\n    ];\n\n    const animations = {\n      glide,\n      flap,\n    };\n\n    const getAnim = (animation) => ({\n      framerate: 20,\n      loop: true,\n      textures: animation.map(({ textureNumber, count }) => ({\n        texture: this._textures[textureNumber],\n        count,\n      })),\n    });\n\n    const anims = (options.animations?.value ?? [])\n      .filter((animation) => Object.keys(animations).includes(animation))\n      .map((animation) => getAnim(animations[animation]));\n\n    if (anims.length === 0) {\n      anims.push(getAnim(animations.glide));\n    }\n\n    return anims;\n  }\n\n  /**\n   * Get the textures for this particle effect.\n   * @private\n   * @returns {PIXI.Texture[]}\n   */\n  get _textures() {\n    if (!this.constructor._textureCache) {\n      const spriteSheetTexture = PIXI.Texture.from(\"modules/fxmaster/assets/particle-effects/effects/eagles/eagle.png\");\n      const spriteSheetData = {\n        meta: {\n          scale: \"1\",\n        },\n        frames: {\n          \"eagle0000.png\": {\n            frame: { x: 0, y: 0, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0001.png\": {\n            frame: { x: 512, y: 0, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0002.png\": {\n            frame: { x: 0, y: 512, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0003.png\": {\n            frame: { x: 512, y: 512, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0004.png\": {\n            frame: { x: 1024, y: 0, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0005.png\": {\n            frame: { x: 1024, y: 512, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0006.png\": {\n            frame: { x: 0, y: 1024, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0007.png\": {\n            frame: { x: 512, y: 1024, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0008.png\": {\n            frame: { x: 1024, y: 1024, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0009.png\": {\n            frame: { x: 1536, y: 0, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0010.png\": {\n            frame: { x: 1536, y: 512, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0011.png\": {\n            frame: { x: 1536, y: 1024, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0012.png\": {\n            frame: { x: 0, y: 1536, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0013.png\": {\n            frame: { x: 512, y: 1536, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0014.png\": {\n            frame: { x: 1024, y: 1536, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0015.png\": {\n            frame: { x: 1536, y: 1536, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0016.png\": {\n            frame: { x: 2048, y: 0, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0017.png\": {\n            frame: { x: 2048, y: 512, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0018.png\": {\n            frame: { x: 2048, y: 1024, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0019.png\": {\n            frame: { x: 2048, y: 1536, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n        },\n      };\n      const spriteSheet = new PIXI.Spritesheet(spriteSheetTexture, spriteSheetData);\n      spriteSheet.parse((textures) => {\n        this.constructor._textureCache = Object.values(textures);\n      }); // This is known to complete synchronously because there are only 20 textures and PIXI only starts batching when there are more than 1000.\n    }\n    return this.constructor._textureCache;\n  }\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\nimport { withSteppedGradientColor } from \"./helpers/with-stepped-gradient-color.js\";\n\n/**\n * A full-screen particle effect which renders floating embers.\n */\nexport class EmbersParticleEffect extends FXMasterParticleEffect {\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectEmbers\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/embers.png\";\n  }\n\n  /** @override */\n  static get parameters() {\n    return foundry.utils.mergeObject(\n      super.parameters,\n      {\n        density: { min: 0.05, value: 0.7, max: 1.4, step: 0.05, decimals: 2 },\n        tint: { value: { value: \"#f77300\" } },\n        \"-=direction\": null,\n      },\n      { performDeletions: true },\n    );\n  }\n\n  /**\n   * Configuration for the particle emitter for floating embers\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static EMBERS_CONFIG = {\n    lifetime: { min: 4, max: 6 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { value: 0, time: 0 },\n              { value: 0.9, time: 0.3 },\n              { value: 0.9, time: 0.95 },\n              { value: 0, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"moveSpeedStatic\",\n        config: { min: 24, max: 40 },\n      },\n      {\n        type: \"scale\",\n        config: {\n          scale: {\n            list: [\n              { value: 0.15, time: 0 },\n              { value: 0.01, time: 1 },\n            ],\n          },\n          minMult: 0.85,\n        },\n      },\n      {\n        type: \"rotation\",\n        config: { accel: 0, minSpeed: 100, maxSpeed: 200, minStart: 0, maxStart: 365 },\n      },\n      {\n        type: \"textureSingle\",\n        config: { texture: \"modules/fxmaster/assets/particle-effects/effects/embers/ember.png\" },\n      },\n      {\n        type: \"color\",\n        config: {\n          color: {\n            list: [\n              { value: \"f77300\", time: 0 },\n              { value: \"f72100\", time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"blendMode\",\n        config: {\n          blendMode: \"screen\",\n        },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.EMBERS_CONFIG;\n  }\n\n  /** @override */\n  getParticleEmitters(options = {}) {\n    options = this.constructor.mergeWithDefaults(options);\n    const d = canvas.dimensions;\n    const maxParticles = (d.width / d.size) * (d.height / d.size) * options.density.value;\n    const config = foundry.utils.deepClone(this.constructor.EMBERS_CONFIG);\n    config.maxParticles = maxParticles;\n    config.frequency = config.lifetime.min / maxParticles;\n    config.behaviors.push({\n      type: \"spawnShape\",\n      config: {\n        type: \"rect\",\n        data: { x: d.sceneRect.x, y: d.sceneRect.y, w: d.sceneRect.width, h: d.sceneRect.height },\n      },\n    });\n    this.applyOptionsToConfig(options, config);\n\n    const emitter = withSteppedGradientColor(this.createEmitter(config), config);\n    return [emitter];\n  }\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\n\n/**\n * A full-screen weather effect which renders rain drops and splashes.\n */\nexport class RainParticleEffect extends FXMasterParticleEffect {\n  /** @override */\n  static label = \"WEATHER.Rain\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/rain.png\";\n  }\n\n  /** @override */\n  static get group() {\n    return \"weather\";\n  }\n\n  /**\n   * Configuration for the particle emitter for rain\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static RAIN_CONFIG = {\n    lifetime: { min: 0.5, max: 0.5 },\n    pos: { x: 0, y: 0 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { time: 0, value: 0.7 },\n              { time: 1, value: 0.1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"moveSpeedStatic\",\n        config: { min: 2800, max: 3500 },\n      },\n      {\n        type: \"scaleStatic\",\n        config: { min: 0.8, max: 1 },\n      },\n      {\n        type: \"rotationStatic\",\n        config: { min: 75, max: 75 },\n      },\n      {\n        type: \"textureSingle\",\n        config: { texture: \"ui/particles/rain.png\" },\n      },\n    ],\n  };\n\n  /**\n   * Configuration for the particle emitter for splashes\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static SPLASH_CONFIG = {\n    lifetime: { min: 0.5, max: 0.5 },\n    pos: { x: 0, y: 0 },\n    behaviors: [\n      {\n        type: \"moveSpeedStatic\",\n        config: { min: 0, max: 0 },\n      },\n      {\n        type: \"scaleStatic\",\n        config: { min: 0.48, max: 0.6 },\n      },\n      {\n        type: \"rotationStatic\",\n        config: { min: -90, max: -90 },\n      },\n      {\n        type: \"noRotation\",\n        config: {},\n      },\n      {\n        type: \"textureSingle\",\n        config: { texture: \"ui/particles/drop.png\" },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.RAIN_CONFIG;\n  }\n\n  /** @override */\n  getParticleEmitters(options = {}) {\n    options = this.constructor.mergeWithDefaults(options);\n    const d = canvas.dimensions;\n    const maxParticles = (d.width / d.size) * (d.height / d.size) * options.density.value;\n\n    // Create an emitter for rain drops\n    const rainConfig = foundry.utils.deepClone(this.constructor.RAIN_CONFIG);\n    rainConfig.maxParticles = maxParticles;\n    rainConfig.frequency = 1 / maxParticles;\n    rainConfig.behaviors.push({\n      type: \"spawnShape\",\n      config: {\n        type: \"rect\",\n        data: {\n          x: -0.05 * d.width,\n          y: -0.1 * d.height,\n          w: d.width,\n          h: 0.8 * d.height,\n        },\n      },\n    });\n    this.applyOptionsToConfig(options, rainConfig);\n\n    // Create a second emitter for splashes\n    const splashConfig = foundry.utils.deepClone(this.constructor.SPLASH_CONFIG);\n    splashConfig.maxParticles = 0.5 * maxParticles;\n    splashConfig.frequency = 2 / maxParticles;\n    splashConfig.behaviors.push({\n      type: \"spawnShape\",\n      config: {\n        type: \"rect\",\n        data: {\n          x: 0,\n          y: 0.25 * d.height,\n          w: d.width,\n          h: 0.75 * d.height,\n        },\n      },\n    });\n    this.applyOptionsToConfig(options, splashConfig);\n\n    // Return both emitters\n    return [this.createEmitter(rainConfig), this.createEmitter(splashConfig)];\n  }\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\n\n/**\n * A full-screen weather effect which renders rain drops from top down.\n */\nexport class RainTopParticleEffect extends FXMasterParticleEffect {\n  /**\n   * The id of the canvasPan hook registered by this effect.\n   * @type {number|undefined}\n   * @private\n   */\n  _canvasPanHookId;\n\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectRainTop\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/rain.png\";\n  }\n\n  /** @override */\n  static get group() {\n    return \"weather\";\n  }\n\n  /** @override */\n  static get parameters() {\n    return foundry.utils.mergeObject(\n      super.parameters,\n      {\n        density: { min: 0.01, value: 0.3, max: 1, step: 0.01, decimals: 2 },\n        \"-=direction\": null,\n      },\n      { performDeletions: true },\n    );\n  }\n\n  /**\n   * Configuration for the particle emitter for raindrops from top down\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static RAIN_TOP_CONFIG = {\n    lifetime: { min: 0.6, max: 0.7 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { value: 0, time: 0 },\n              { value: 0.6, time: 0.8 },\n              { value: 0.23, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"scale\",\n        config: {\n          scale: {\n            list: [\n              { value: 3, time: 0 },\n              { value: 0.4, time: 1 },\n            ],\n          },\n          minMult: 0.7,\n        },\n      },\n      {\n        type: \"rotationStatic\",\n        config: { min: 180, max: 180 },\n      },\n      {\n        type: \"textureSingle\",\n        config: { texture: \"ui/particles/rain.png\" },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.RAIN_TOP_CONFIG;\n  }\n\n  /** @override */\n  getParticleEmitters(options = {}) {\n    options = this.constructor.mergeWithDefaults(options);\n    const d = canvas.dimensions;\n    const maxParticles = (d.width / d.size) * (d.height / d.size) * options.density.value;\n    const sceneRadius = Math.sqrt(d.sceneWidth * d.sceneWidth + d.sceneHeight * d.sceneHeight) / 2;\n    const config = foundry.utils.deepClone(this.constructor.RAIN_TOP_CONFIG);\n    config.maxParticles = maxParticles;\n    config.frequency = config.lifetime.min / maxParticles;\n    config.behaviors.push({\n      type: \"moveSpeed\",\n      config: {\n        speed: {\n          list: [\n            { time: 0, value: 1600 },\n            { time: 1, value: 2000 },\n          ],\n        },\n        minMult: 0.8,\n      },\n    });\n    this.applyOptionsToConfig(options, config);\n    const moveSpeedList = config.behaviors.find(({ type }) => type === \"moveSpeed\").config.speed.list;\n    const averageSpeed = moveSpeedList.reduce((acc, cur) => acc + cur.value, 0) / moveSpeedList.length;\n    config.behaviors.push({\n      type: \"spawnShape\",\n      config: {\n        type: \"torus\",\n        data: {\n          x: d.sceneRect.x + d.sceneWidth / 2,\n          y: d.sceneRect.y + d.sceneHeight / 2,\n          radius: averageSpeed * config.lifetime.max + sceneRadius * 2,\n          innerRadius: averageSpeed * config.lifetime.max,\n          affectRotation: true,\n        },\n      },\n    });\n\n    const emitter = this.createEmitter(config);\n    emitter.updateOwnerPos(\n      canvas.stage.pivot.x - d.sceneX - d.sceneWidth / 2,\n      canvas.stage.pivot.y - d.sceneY - d.sceneHeight / 2,\n    );\n    return [emitter];\n  }\n\n  /** @override */\n  play() {\n    this._unregisterCanvasPanHook();\n    this._canvasPanHookId = Hooks.on(\"canvasPan\", (_canvas, position) => {\n      const d = canvas.dimensions;\n      for (let e of this.emitters) {\n        e.updateOwnerPos(position.x - d.sceneX - d.sceneWidth / 2, position.y - d.sceneY - d.sceneHeight / 2);\n      }\n    });\n    super.play();\n  }\n\n  /** @override */\n  stop() {\n    this._unregisterCanvasPanHook();\n    super.stop();\n  }\n\n  /**\n   * Unregister the canvasPan hook used by this effect.\n   * @private\n   */\n  _unregisterCanvasPanHook() {\n    if (this._canvasPanHookId !== undefined) {\n      Hooks.off(\"canvasPan\", this._canvasPanHookId);\n      this._canvasPanHookId = undefined;\n    }\n  }\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\n\n/**\n * A full-screen weather effect which renders rain drops.\n */\nexport class RainSimpleParticleEffect extends FXMasterParticleEffect {\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectRainSimple\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/rain.png\";\n  }\n\n  /** @override */\n  static get group() {\n    return \"weather\";\n  }\n\n  /**\n   * Configuration for the particle emitter for rain\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static RAIN_CONFIG = {\n    lifetime: { min: 0.5, max: 0.5 },\n    pos: { x: 0, y: 0 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { time: 0, value: 0.7 },\n              { time: 1, value: 0.1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"moveSpeedStatic\",\n        config: { min: 2800, max: 3500 },\n      },\n      {\n        type: \"scaleStatic\",\n        config: { min: 0.8, max: 1 },\n      },\n      {\n        type: \"rotationStatic\",\n        config: { min: 75, max: 75 },\n      },\n      {\n        type: \"textureSingle\",\n        config: { texture: \"ui/particles/rain.png\" },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.RAIN_CONFIG;\n  }\n\n  /** @override */\n  getParticleEmitters(options = {}) {\n    options = this.constructor.mergeWithDefaults(options);\n    const d = canvas.dimensions;\n    const maxParticles = (d.width / d.size) * (d.height / d.size) * options.density.value;\n\n    const config = foundry.utils.deepClone(this.constructor.RAIN_CONFIG);\n    config.maxParticles = maxParticles;\n    config.frequency = 1 / maxParticles;\n    config.behaviors.push({\n      type: \"spawnShape\",\n      config: {\n        type: \"rect\",\n        data: {\n          x: -0.05 * d.width,\n          y: -0.1 * d.height,\n          w: d.width,\n          h: 0.8 * d.height,\n        },\n      },\n    });\n    this.applyOptionsToConfig(options, config);\n\n    return [this.createEmitter(config)];\n  }\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\n\n/**\n * A full-screen weather effect which renders drifting snowflakes.\n */\nexport class SnowParticleEffect extends FXMasterParticleEffect {\n  /** @override */\n  static label = \"WEATHER.Snow\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/snow.png\";\n  }\n\n  /** @override */\n  static get group() {\n    return \"weather\";\n  }\n\n  /**\n   * Configuration for the particle emitter for snow\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static SNOW_CONFIG = {\n    lifetime: { min: 4, max: 4 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { time: 0, value: 0.9 },\n              { time: 1, value: 0.5 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"moveSpeed\",\n        config: {\n          speed: {\n            list: [\n              { time: 0, value: 190 },\n              { time: 1, value: 210 },\n            ],\n          },\n          minMult: 0.6,\n        },\n      },\n      {\n        type: \"scale\",\n        config: {\n          scale: {\n            list: [\n              { time: 0, value: 0.2 },\n              { time: 1, value: 0.4 },\n            ],\n          },\n          minMult: 0.5,\n        },\n      },\n      {\n        type: \"rotation\",\n        config: { accel: 0, minSpeed: 0, maxSpeed: 200, minStart: 50, maxStart: 75 },\n      },\n      {\n        type: \"textureSingle\",\n        config: {\n          texture: \"ui/particles/snow.png\",\n        },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.SNOW_CONFIG;\n  }\n\n  /** @override */\n  getParticleEmitters(options = {}) {\n    options = this.constructor.mergeWithDefaults(options);\n    const d = canvas.dimensions;\n    const maxParticles = (d.width / d.size) * (d.height / d.size) * options.density.value;\n    const config = foundry.utils.deepClone(this.constructor.SNOW_CONFIG);\n    config.maxParticles = maxParticles;\n    config.frequency = (config.lifetime.min + config.lifetime.max) / 2 / maxParticles;\n    config.behaviors.push({\n      type: \"spawnShape\",\n      config: {\n        type: \"rect\",\n        data: { x: 0, y: -0.1 * d.height, w: d.width, h: d.height },\n      },\n    });\n    return [this.createEmitter(config)];\n  }\n}\n","export const specialEffects = {\n  fxmaster: {\n    label: \"FXMaster\",\n    effects: [\n      {\n        label: \"Smoke Bomb\",\n        file: \"modules/fxmaster/assets/special-effects/fxmaster/smoke-bomb.webm\",\n        scale: {\n          x: 1.0,\n          y: 1.0,\n        },\n        angle: 0,\n        anchor: {\n          x: 0.5,\n          y: 0.5,\n        },\n        speed: 0,\n        author: \"U~man\",\n      },\n      {\n        label: \"Fireball\",\n        file: \"modules/fxmaster/assets/special-effects/fxmaster/fireball.webm\",\n        scale: {\n          x: 1.0,\n          y: 1.0,\n        },\n        angle: 0,\n        anchor: {\n          x: 0.5,\n          y: 0.5,\n        },\n        author: \"U~man\",\n      },\n      {\n        label: \"Blood Splatter\",\n        file: \"modules/fxmaster/assets/special-effects/fxmaster/blood.webm\",\n        scale: {\n          x: 0.7,\n          y: 0.7,\n        },\n        angle: 0,\n        anchor: {\n          x: 0.5,\n          y: 0.5,\n        },\n        author: \"U~man\",\n      },\n      {\n        label: \"Red Fire Cone\",\n        file: \"modules/fxmaster/assets/special-effects/jinker/dragonBornGold-RedFire15Cone.webm\",\n        scale: {\n          x: 1.0,\n          y: 1.0,\n        },\n        angle: 0,\n        anchor: {\n          x: 0,\n          y: 0.5,\n        },\n        author: \"Jinker\",\n      },\n      {\n        label: \"Acid Line\",\n        file: \"modules/fxmaster/assets/special-effects/jinker/dragonBornBlack-CopperAcid30x5Line.webm\",\n        scale: {\n          x: 1.0,\n          y: 1.0,\n        },\n        angle: 0,\n        anchor: {\n          x: 0,\n          y: 0.5,\n        },\n        author: \"Jinker\",\n      },\n      {\n        label: \"Witch Bolt\",\n        file: \"modules/fxmaster/assets/special-effects/jb2a/Witch_Bolt_Blue_600x200.webm\",\n        scale: {\n          x: 0.7,\n          y: 0.7,\n        },\n        angle: 0,\n        anchor: {\n          x: 0,\n          y: 0.5,\n        },\n        author: \"JB2A\",\n      },\n    ],\n  },\n};\n","import { packageId } from \"../constants.js\";\nimport { logger } from \"../logger.js\";\nimport { executeWhenWorldIsMigratedToLatest, isOnTargetMigration } from \"../migration/migration.js\";\nimport { isEnabled } from \"../settings.js\";\n\nexport class ParticleEffectsLayer extends CanvasLayer {\n  /**\n   * The particle overlay container.\n   * @type {FullCanvasContainer| undefined}\n   */\n  particleEffectsContainer;\n\n  /**\n   * The currently active particle effects.\n   * @type {Record<string, {type: string, fx: import('./effects/effect.js').FXMasterParticleEffect}>}\n   */\n  particleEffects = {};\n\n  /**\n   * An occlusion filter that prevents particle effects from being displayed in certain regions.\n   * @type {InverseOcclusionMaskFilter | undefined}\n   */\n  particleEffectOcclusionFilter;\n\n  /**\n   * Define an elevation property on the ParticleEffectsLayer layer.\n   * For now, it simply referenes the elevation property of the {@link WeatherEffects} provided by\n   * foundry.\n   * @type {number}\n   */\n  get elevation() {\n    return canvas.weather?.elevation ?? Infinity;\n  }\n\n  set elevation(value) {\n    const weatherEffects = canvas.weather;\n    if (weatherEffects) {\n      weatherEffects.elevation = value;\n    }\n  }\n\n  /** @override */\n  static get layerOptions() {\n    return foundry.utils.mergeObject(super.layerOptions, { name: \"particle-effects\" });\n  }\n\n  /** @override */\n  async _draw() {\n    if (!isEnabled()) {\n      return;\n    }\n    if (isOnTargetMigration()) {\n      await this.#draw();\n    } else {\n      // If migrations need to be performed, defer drawing to when they are done.\n      executeWhenWorldIsMigratedToLatest(this.#draw.bind(this));\n    }\n  }\n\n  /** @override */\n  async _tearDown() {\n    Object.values(this.particleEffects).forEach(({ fx }) => fx.destroy());\n\n    this.particleEffectsContainer = undefined;\n    this.particleEffects = {};\n    this.particleEffectOcclusionFilter = undefined;\n\n    return super._tearDown();\n  }\n\n  /**\n   * Actual implementation of drawing the layer.\n   * @private\n   */\n  async #draw() {\n    this.particleEffectOcclusionFilter = this.#createParticleEffectOcclusionFilter();\n    await this.drawParticleEffects();\n  }\n\n  async drawParticleEffects({ soft = false } = {}) {\n    if (!canvas.scene) {\n      return;\n    }\n    if (!this.particleEffectsContainer) {\n      const particleEffectsContainer = new FullCanvasContainer();\n      particleEffectsContainer.accessibleChildren = particleEffectsContainer.interactiveChildren = false;\n      particleEffectsContainer.filterArea = canvas.app.renderer.screen;\n      this.particleEffectsContainer = this.addChild(particleEffectsContainer);\n      if (this.particleEffectOcclusionFilter) {\n        this.particleEffectsContainer.filters = [this.particleEffectOcclusionFilter];\n      }\n    }\n\n    const stopPromise = Promise.all(\n      Object.entries(this.particleEffects).map(async ([id, effect]) => {\n        if (soft) {\n          await effect.fx.fadeOut({ timeout: 20000 });\n        } else {\n          effect.fx.stop();\n        }\n        // The check is needed because a new effect might have been set already.\n        if (this.particleEffects[id] === effect) {\n          delete this.particleEffects[id];\n        }\n      }),\n    );\n\n    const flags = canvas.scene.getFlag(packageId, \"effects\") ?? {};\n    if (Object.keys(flags).length > 0) {\n      this.particleEffectOcclusionFilter.enabled = true;\n    }\n    for (const id in flags) {\n      if (!(flags[id].type in CONFIG.fxmaster.particleEffects)) {\n        logger.warn(`Particle effect '${id}' is of unknown type '${flags[id].type}', skipping it.`);\n        continue;\n      }\n      const options = Object.fromEntries(\n        Object.entries(flags[id].options).map(([optionName, value]) => [optionName, { value }]),\n      );\n\n      this.particleEffects[id] = {\n        type: flags[id].type,\n        fx: new CONFIG.fxmaster.particleEffects[flags[id].type](this.particleEffectsContainer, options),\n      };\n      this.particleEffects[id].fx.play({ prewarm: !soft });\n    }\n\n    await stopPromise;\n\n    if (Object.keys(this.particleEffects).length === 0) {\n      this.particleEffectOcclusionFilter.enabled = false;\n    }\n  }\n\n  /**\n   * Create the occlusion filter.\n   * @returns {InverseOcclusionMaskFilter} The occlusion filter\n   * @private\n   */\n  #createParticleEffectOcclusionFilter() {\n    const particleOcclusionFilter = InverseOcclusionMaskFilter.create({\n      alphaOcclusion: 0,\n      uMaskSampler: canvas.masks.depth.renderTexture,\n      channel: \"b\",\n    });\n    return particleOcclusionFilter;\n  }\n}\n","import { packageId } from \"../constants.js\";\n\nexport function registeDrawingsMaskFunctionality() {\n  Hooks.on(\"canvasReady\", drawDrawingsMask);\n\n  for (const hook of [\"updateDrawing\", \"createDrawing\", \"deleteDrawing\"]) {\n    Hooks.on(hook, (drawing) => {\n      drawDrawingsMaskIfCurrentScene(drawing.parent);\n    });\n  }\n\n  Hooks.on(\"updateScene\", (scene, data) => {\n    if (\n      foundry.utils.hasProperty(data, \"flags.fxmaster.invert\") ||\n      foundry.utils.hasProperty(data, \"flags.fxmaster.-=invert\")\n    ) {\n      drawDrawingsMaskIfCurrentScene(scene);\n    }\n  });\n}\n\nfunction drawDrawingsMaskIfCurrentScene(scene) {\n  if (scene === canvas.scene) {\n    drawDrawingsMask();\n  }\n}\n\nfunction drawDrawingsMask() {\n  const msk = canvas.masks.depth;\n  if (msk.fxmasterDrawingsMask) {\n    msk.removeChild(msk.fxmasterDrawingsMask);\n    delete msk.fxmasterDrawingsMask;\n  }\n  const invert = canvas.scene.getFlag(packageId, \"invert\");\n  const mask = invert ? createInvertedMask() : createMask();\n  mask.mask = new PIXI.MaskData();\n  mask.mask.colorMask = PIXI.COLOR_MASK_BITS.BLUE;\n  msk.fxmasterDrawingsMask = msk.addChild(mask);\n}\n\nfunction createMask() {\n  const mask = new PIXI.LegacyGraphics();\n  canvas.drawings.placeables.forEach((drawing) => {\n    const isMask = drawing.document.getFlag(packageId, \"masking\");\n    if (!isMask) return;\n    mask.beginFill(0x0000ff);\n    drawShapeToMask(mask, drawing);\n    mask.endFill();\n  });\n  return mask;\n}\n\nfunction createInvertedMask() {\n  const mask = new PIXI.LegacyGraphics();\n  mask.beginFill(0x0000ff).drawShape(canvas.dimensions.rect).endFill();\n\n  canvas.drawings.placeables.forEach((drawing) => {\n    const isMask = drawing.document.getFlag(packageId, \"masking\");\n    if (!isMask) return;\n    mask.beginHole();\n    drawShapeToMask(mask, drawing);\n    mask.endHole();\n  });\n  return mask;\n}\n\n/**\n * Draw a shape to a mask.\n * @param {PIXI.Graphics} mask    The mask to draw to\n * @param {Drawing}       drawing The drawing of which to draw the dhape\n */\nfunction drawShapeToMask(mask, drawing) {\n  const shape = drawing.shape.geometry.graphicsData[0].shape.clone();\n  switch (drawing.type) {\n    case Drawing.SHAPE_TYPES.ELLIPSE: {\n      shape.x = drawing.center.x;\n      shape.y = drawing.center.y;\n      mask.drawShape(shape);\n      break;\n    }\n    case Drawing.SHAPE_TYPES.POLYGON: {\n      const points = drawing.document.shape.points.map((p, i) => (i % 2 === 0 ? p + drawing.x : p + drawing.y));\n      mask.drawPolygon(points);\n      break;\n    }\n    default: {\n      const s = drawing.document.shape;\n      shape.x = drawing.center.x - s.width / 2;\n      shape.y = drawing.center.y - s.height / 2;\n      mask.drawShape(shape);\n    }\n  }\n}\n","export function registerSceneMaskFunctionality() {\n  Hooks.on(\"canvasReady\", drawSceneMask);\n}\n\nfunction drawSceneMask() {\n  const msk = canvas.masks.depth;\n  if (msk.fxmasterSceneMask) {\n    msk.removeChild(msk.fxmasterSceneMask);\n    delete msk.fxmasterSceneMask;\n  }\n  if (shouldMaskToScene()) {\n    const mask = new PIXI.LegacyGraphics()\n      .beginFill(0x0000ff)\n      .drawShape(canvas.dimensions.rect)\n      .endFill()\n      .beginHole()\n      .drawShape(canvas.dimensions.sceneRect.intersection(canvas.dimensions.rect))\n      .endHole();\n    mask.mask = new PIXI.MaskData();\n    mask.mask.colorMask = PIXI.COLOR_MASK_BITS.BLUE;\n    msk.fxmasterSceneMask = msk.addChild(mask);\n  }\n}\n\n/**\n * Whether or not the particle effects should be masked to the scene.\n * @type {boolean}\n */\nfunction shouldMaskToScene() {\n  return !!(canvas.scene?.background?.src || canvas.scene?.foreground);\n}\n","import { packageId } from \"../constants.js\";\nimport { logger } from \"../logger.js\";\nimport { executeWhenWorldIsMigratedToLatest, isOnTargetMigration } from \"../migration/migration.js\";\nimport { isEnabled } from \"../settings.js\";\nimport { resetFlag } from \"../utils.js\";\n\nexport class FilterManager {\n  /** @private */\n  constructor() {\n    this.filters = {};\n    this._ticker = false;\n    this.#registerHooks();\n  }\n\n  /**\n   * A private reference for the global {@link FilterManager} instance.\n   * @type {FilterManager | undefined}\n   */\n  static #instance;\n\n  /**\n   * The container effects should be a pplied to.\n   * @type {PIXI.Container}\n   */\n  static get container() {\n    return canvas.environment;\n  }\n\n  /**\n   * The singleton {@link FilterManager} instance.\n   * @type {FilterManager}\n   */\n  static get instance() {\n    if (!this.#instance) {\n      this.#instance = new this();\n    }\n    return this.#instance;\n  }\n\n  /**\n   * Activate this {@link FilterManager}. This includes creating all the necessary filters, attaching them to the\n   * configured layers, starting their animations.\n   * @returns {Promise<void>} A promise that resolves as soon as filters are activated\n   */\n  async #activate() {\n    await this.#update({ skipFading: true });\n\n    if (!this._ticker) {\n      canvas.app.ticker.add(this.#animate, this);\n      this._ticker = true;\n    }\n  }\n\n  /**\n   * Update the filters to the state that is configured for the active scene.\n   * @param {{skipFading?: boolean}} [options]            Additional options to configure this update\n   * @param {boolean}                [options.skipFading] Whether or not newly created filters should skip their fading\n   * @returns {Promise<void>}                             A promise that resolves as soon as the filters have been updated\n   */\n  async #update({ skipFading = false } = {}) {\n    if (!canvas.scene) {\n      return;\n    }\n    const filterInfos = Object.fromEntries(\n      Object.entries(canvas.scene.getFlag(packageId, \"filters\") ?? {}).filter(([id, filterInfo]) => {\n        if (!(filterInfo.type in CONFIG.fxmaster.filterEffects)) {\n          logger.warn(`Filter effect '${id}' is of unknown type '${filterInfo.type}', skipping it.`);\n          return false;\n        }\n        return true;\n      }),\n    );\n\n    const filtersToCreate = Object.keys(filterInfos).filter((key) => !(key in this.filters));\n    const filtersToUpdate = Object.keys(filterInfos).filter((key) => key in this.filters);\n    const filtersToDelete = Object.keys(this.filters).filter((key) => !(key in filterInfos));\n\n    for (const key of filtersToCreate) {\n      const { type, options } = filterInfos[key];\n      this.filters[key] = new CONFIG.fxmaster.filterEffects[type](options, key);\n      this.filters[key].play({ skipFading });\n    }\n\n    for (const key of filtersToUpdate) {\n      const { options } = filterInfos[key];\n      const filter = this.filters[key];\n      filter.configure(options);\n      filter.play({ skipFading });\n    }\n\n    const deletePromises = filtersToDelete.map(async (key) => {\n      const filter = this.filters[key];\n      const completed = await filter.stop({ skipFading });\n      if (completed) {\n        delete this.filters[key];\n        FilterManager.#removeFilterFromContainer(this.constructor.container, filter);\n      }\n    });\n    await Promise.all(deletePromises);\n\n    this.#applyFilters();\n  }\n\n  /**\n   * Apply the filters to the configured canvas layers.\n   */\n  #applyFilters() {\n    const filters = Object.values(this.filters);\n    const otherFilters = this.constructor.container.filters?.filter((f) => !filters.includes(f)) ?? [];\n    this.constructor.container.filters = otherFilters.concat(filters);\n  }\n\n  /**\n   * Remove a filter from a container.\n   * @param {PIXI.container} container A container\n   * @param {PIXI.Filter} filter A filter\n   */\n  static #removeFilterFromContainer(container, filter) {\n    container.filters = container.filters?.filter((f) => f !== filter) ?? null;\n  }\n\n  /**\n   * Stop all filters and remove them from the manager.\n   * @remarks This does _not_ remove the filters from the canvas layers.\n   * @returns {Promise<void>} A promise that resolves as soon as all filters have been stopped and removed from the\n   *                          manager\n   */\n  async #clear() {\n    const promises = Object.values(this.filters).map((filter) => filter.stop());\n    this.filters = {};\n    await Promise.all(promises);\n  }\n\n  /**\n   * Add a named filter.\n   * @param {string | undefined} name The name of the filter\n   * @param {string} type             The type of the filter\n   * @param {object} options          The options for the filter\n   * @returns {Prmise<void>} A promise that resolves as soon as the filter has been added to the scene's fxmaster flags\n   */\n  async addFilter(name, type, options) {\n    name = name ?? foundry.utils.randomID();\n    await canvas.scene?.setFlag(packageId, \"filters\", { [name]: { type, options } });\n  }\n\n  /**\n   * Remove a named filter.\n   * @param {string} name     The name of the filter to remove\n   * @returns {Promise<void>} A promise that resolves when the filter has been removed from the scene's fxmaster flags\n   */\n  async removeFilter(name) {\n    await canvas.scene?.setFlag(packageId, \"filters\", { [`-=${name}`]: null });\n  }\n\n  /**\n   * Remove all filters.\n   * @returns {Promise<void>} A promise that resolves as soon as all filters have been removed from the scene's fxmaster\n   *                          flags\n   */\n  async removeAll() {\n    await canvas.scene?.unsetFlag(packageId, \"filters\");\n  }\n\n  /**\n   * Toggle a named filter on or off.\n   * @param {string} name     The name of the filter\n   * @param {string} type     The type of the filter\n   * @param {object} options  The options for the filter\n   * @returns {Promise<void>} A promise that resolves as soon as the filter has been toggled\n   */\n  async switch(name, type, options) {\n    if (!canvas.scene) {\n      return;\n    }\n    const filterInfos = canvas.scene.getFlag(packageId, \"filters\") ?? {};\n    if (filterInfos[name]) {\n      return this.removeFilter(name);\n    } else {\n      return this.addFilter(name, type, options);\n    }\n  }\n\n  async setFilters(filterInfoArray) {\n    const filterInfos = Object.fromEntries(filterInfoArray.map((filterInfo) => [foundry.utils.randomID(), filterInfo]));\n    await resetFlag(canvas.scene, \"filters\", filterInfos);\n  }\n\n  #animate() {\n    for (const key in this.filters) {\n      this.filters[key].step();\n    }\n  }\n\n  #registerHooks() {\n    Hooks.on(\"canvasInit\", () => {\n      if (isEnabled()) {\n        this.#clear();\n      }\n    });\n\n    Hooks.on(\"canvasReady\", () => {\n      executeWhenWorldIsMigratedToLatest(async () => {\n        if (isEnabled()) {\n          await this.#activate();\n        }\n      });\n    });\n\n    Hooks.on(\"updateScene\", (scene, data) => {\n      if (!isEnabled() || !isOnTargetMigration() || scene !== canvas.scene) {\n        return;\n      }\n      if (\n        foundry.utils.hasProperty(data, \"flags.fxmaster.filters\") ||\n        foundry.utils.hasProperty(data, \"flags.fxmaster.-=filters\")\n      ) {\n        this.#update();\n      }\n    });\n  }\n}\n","import { easeFunctions } from \"../../ease.js\";\nimport { packageId } from \"../../constants.js\";\n\nexport class SpecialEffectConfig extends FormApplication {\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"form\"],\n      closeOnSubmit: true,\n      submitOnChange: false,\n      submitOnClose: false,\n      popOut: true,\n      editable: game.user.isGM,\n      width: 320,\n      height: \"auto\",\n      template: \"modules/fxmaster/templates/special-effect-config.hbs\",\n      id: \"add-effect\",\n      title: game.i18n.localize(\"FXMASTER.AddSpecialEffect\"),\n    });\n  }\n\n  /* -------------------------------------------- */\n\n  setDefault(object) {\n    this.default = object;\n  }\n\n  /**\n   * Obtain module metadata and merge it with game settings which track current module visibility\n   * @return {Object}   The data provided to the template when rendering the form\n   */\n  getData() {\n    const eases = easeFunctions;\n    const values = foundry.utils.mergeObject(\n      {\n        folder: \"Custom\",\n        angle: 0,\n        position: {\n          x: 0,\n          y: 0,\n        },\n        anchor: {\n          x: 0.5,\n          y: 0.5,\n        },\n        scale: {\n          x: 1.0,\n          y: 1.0,\n        },\n        speed: 0,\n        animationDelay: {\n          start: 0,\n          end: 0,\n        },\n        ease: \"Linear\",\n        author: \"\",\n        preset: false,\n      },\n      this.default,\n    );\n\n    // Return data to the template\n    return {\n      default: values,\n      ease: Object.keys(eases),\n    };\n  }\n\n  /* -------------------------------------------- */\n  /*  Event Listeners and Handlers                */\n  /* -------------------------------------------- */\n\n  /** @override */\n  activateListeners(html) {\n    super.activateListeners(html);\n    html.find('input[type=\"range\"]').on(\"input\", (event) => this._onChangeRange(event));\n  }\n\n  /**\n   * This method is called upon form submission after form data is validated\n   * @param event {Event}       The initial triggering submission event\n   * @param formData {object}   The object of validated form data with which to update the object\n   * @protected\n   */\n  async _updateObject(_, formData) {\n    const fxs = game.settings.get(packageId, \"specialEffects\");\n\n    const newData = {\n      folder: formData[\"folder\"],\n      label: formData[\"label\"],\n      file: formData[\"file\"],\n      scale: {\n        x: parseFloat(formData[\"scaleX\"]),\n        y: parseFloat(formData[\"scaleY\"]),\n      },\n      angle: parseFloat(formData[\"angle\"]),\n      anchor: {\n        x: formData[\"anchorX\"],\n        y: formData[\"anchorY\"],\n      },\n      speed: parseFloat(formData[\"speed\"]),\n      animationDelay: {\n        start: parseFloat(formData[\"animationDelayStart\"]),\n        end: parseFloat(formData[\"animationDelayEnd\"]),\n      },\n      ease: formData[\"ease\"],\n      preset: false,\n      author: \"\",\n    };\n    const fx = fxs.filter((f) => f.label == newData.label);\n    if (fx.length > 0) {\n      fx[0] = foundry.utils.mergeObject(fx[0], newData);\n    } else {\n      fxs.push(newData);\n    }\n    await game.settings.set(packageId, \"specialEffects\", fxs);\n  }\n}\n","import { SpecialEffectConfig } from \"./special-effect-config.js\";\nimport { packageId } from \"../../constants.js\";\n\nimport \"../../../css/specials-config.css\";\n\nexport class SpecialEffectsManagement extends Application {\n  /** @override */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"fxmaster\", \"specials\", \"sidebar-popout\"],\n      closeOnSubmit: true,\n      submitOnChange: false,\n      submitOnClose: false,\n      popOut: true,\n      editable: game.user.isGM,\n      width: 120,\n      height: 200,\n      resizable: true,\n      dragDrop: [{ dragSelector: \".special-effects\" }],\n      template: \"modules/fxmaster/templates/special-effects-management.hbs\",\n      id: \"specials-config\",\n      title: game.i18n.localize(\"FXMASTER.SpecialEffectsManagementTitle\"),\n    });\n  }\n\n  /** @override */\n  getData() {\n    return {\n      folders: CONFIG.fxmaster.userSpecials,\n    };\n  }\n\n  /** @override */\n  activateListeners(html) {\n    html.find(\".special-effects .description\").click((event) => {\n      let list = event.currentTarget.closest(\".directory-list\");\n      let items = $(list).find(\".directory-item\");\n      for (let i = 0; i < items.length; i++) {\n        items[i].classList.remove(\"active\");\n      }\n      event.currentTarget.parentElement.classList.add(\"active\");\n    });\n\n    // Dialog\n    html.find(\"a[data-action=add-effect]\").click(async () => {\n      new SpecialEffectConfig().render(true);\n    });\n\n    html.find(\".preview video\").hover((ev) => {\n      ev.currentTarget.play();\n    });\n\n    html.find(\".del-effect\").click((ev) => {\n      const folderId = ev.currentTarget.closest(\".folder\").dataset[\"folderId\"];\n      const effectId = ev.currentTarget.closest(\".special-effects\").dataset[\"effectId\"];\n      const data = CONFIG.fxmaster.userSpecials[folderId].effects[effectId];\n      const settings = game.settings.get(packageId, \"specialEffects\");\n      const id = settings.findIndex((v) => {\n        return v.label === data.label && v.folder === data.folder;\n      });\n      if (id === -1) {\n        return;\n      }\n      settings.splice(id, 1);\n      game.settings.set(packageId, \"specialEffects\", settings);\n    });\n\n    html.find(\".edit-effect\").click((ev) => {\n      const folderId = ev.currentTarget.closest(\".folder\").dataset[\"folderId\"];\n      const effectId = ev.currentTarget.closest(\".special-effects\").dataset[\"effectId\"];\n      const d = new SpecialEffectConfig();\n      d.setDefault(CONFIG.fxmaster.userSpecials[folderId].effects[effectId]);\n      d.render(true);\n    });\n\n    html.find(\".action-toggle\").click((ev) => {\n      for (const c of ev.currentTarget.parentElement.children) {\n        c.classList.remove(\"active\");\n      }\n      ev.currentTarget.classList.add(\"active\");\n    });\n\n    const directory = html.find(\".directory-list\");\n    directory.on(\"click\", \".folder-header\", this._toggleFolder.bind(this));\n  }\n\n  _toggleFolder(event) {\n    let folder = $(event.currentTarget.parentElement);\n    let collapsed = folder.hasClass(\"collapsed\");\n\n    // Expand\n    if (collapsed) folder.removeClass(\"collapsed\");\n    // Collapse\n    else {\n      folder.addClass(\"collapsed\");\n      folder.find(\".folder\").addClass(\"collapsed\");\n    }\n  }\n\n  /** @override */\n  _onDragStart(event) {\n    const effectId = event.currentTarget.closest(\".special-effects\").dataset.effectId;\n    const folderId = event.currentTarget.closest(\".folder\").dataset.folderId;\n    const effectData = CONFIG.fxmaster.userSpecials[folderId].effects[effectId];\n    effectData.type = \"SpecialEffect\";\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(effectData));\n  }\n}\n","/**\n * A SpriteMesh which visualizes a special effect object in the PrimaryCanvasGroup.\n */\nexport class SpecialEffectMesh extends SpriteMesh {\n  /** @type {number} */\n  get elevation() {\n    return this.#elevation;\n  }\n\n  set elevation(value) {\n    this.#elevation = value;\n  }\n\n  #elevation = 0;\n}\n","import { packageId } from \"../constants.js\";\nimport { easeFunctions } from \"../ease.js\";\nimport { SpecialEffectMesh } from \"./mesh.js\";\n\nexport class SpecialEffectsLayer extends InteractionLayer {\n  constructor() {\n    super();\n    this.videos = [];\n    this._dragging = false;\n    this.ruler = null;\n    this.windowVisible = false;\n    // Listen to the socket\n    game.socket.on(`module.${packageId}`, (data) => {\n      this.playVideo(data);\n    });\n  }\n\n  static get layerOptions() {\n    return foundry.utils.mergeObject(super.layerOptions, {\n      name: \"specials\",\n      zIndex: 245,\n    });\n  }\n\n  /** @override */\n  async _draw() {\n    await super._draw();\n    this.ruler = this.addChild(new PIXI.Graphics());\n  }\n\n  /** @inheritdoc */\n  async _tearDown() {\n    this.ruler = null;\n    for (const video of this.videos) {\n      video.remove();\n    }\n    this.videos = [];\n    return super._tearDown();\n  }\n\n  _configureProjectile(mesh, data) {\n    if (data.distance && (!data.speed || data.speed == \"auto\")) {\n      data.speed = data.distance / data.duration;\n    }\n    // Compute final position\n    const delta = data.duration * data.speed;\n    const deltaX = delta * Math.cos(data.rotation);\n    const deltaY = delta * Math.sin(data.rotation);\n\n    // Move the sprite\n    const attributes = [\n      {\n        parent: mesh,\n        attribute: \"x\",\n        to: data.position.x + deltaX,\n      },\n      {\n        parent: mesh,\n        attribute: \"y\",\n        to: data.position.y + deltaY,\n      },\n    ];\n\n    let animationDuration = data.duration * 1000;\n    if (foundry.utils.hasProperty(data, \"animationDelay\")) {\n      animationDuration -= Math.max(0, 1000 * (data.animationDelay.end + data.animationDelay.start));\n    }\n    const animationName = `${packageId}.video.${randomID()}.move`;\n    const animate = function () {\n      CanvasAnimation.animate(attributes, {\n        name: animationName,\n        context: this,\n        duration: animationDuration,\n        easing: easeFunctions[data.ease],\n      });\n    };\n    if (foundry.utils.hasProperty(data, \"animationDelay.start\")) {\n      setTimeout(animate, data.animationDelay.start * 1000.0);\n    } else {\n      animate();\n    }\n    return () => CanvasAnimation.terminateAnimation(animationName);\n  }\n\n  _configureRotate(mesh, data) {\n    const attributes = [\n      {\n        parent: mesh,\n        attribute: \"angle\",\n        to: 90 * data.rotationSpeed,\n      },\n    ];\n    let animationDuration = data.duration * 1000;\n    if (foundry.utils.hasProperty(data, \"animationDelay\")) {\n      animationDuration -= Math.max(0, 1000 * (data.animationDelay.end + data.animationDelay.start));\n    }\n    const animationName = `${packageId}.video.${randomID()}.rotate`;\n\n    const animate = function () {\n      CanvasAnimation.animate(attributes, {\n        name: animationName,\n        context: this,\n        duration: animationDuration,\n        easing: easeFunctions[data.ease],\n      });\n    };\n    if (foundry.utils.hasProperty(data, \"animationDelay.start\")) {\n      setTimeout(animate, data.animationDelay.start * 1000.0);\n    } else {\n      animate();\n    }\n    return () => CanvasAnimation.terminateAnimation(animationName);\n  }\n\n  #configureSpecialEffectMesh(mesh, data) {\n    mesh.anchor.set(data.anchor.x, data.anchor.y);\n    mesh.rotation = Math.normalizeRadians(data.rotation - Math.toRadians(data.angle));\n    mesh.scale.set(data.scale.x, data.scale.y);\n    mesh.position.set(data.position.x, data.position.y);\n    mesh.elevation = data.elevation ?? 1;\n\n    if (data.width) {\n      if (data.keepAspect) {\n        const aspectRatio = mesh.height / mesh.width;\n        mesh.height = data.width * aspectRatio;\n      }\n      mesh.width = data.width;\n    }\n\n    /** @type {(() => void) | undefined} */\n    let terminateMovementAnimation;\n    if (data.speed || data.distance) {\n      terminateMovementAnimation = this._configureProjectile(mesh, data);\n    }\n    /** @type {(() => void) | undefined} */\n    let terminateRotationtAnimation;\n    if (data.rotationSpeed) {\n      terminateRotationtAnimation = this._configureRotate(mesh, data);\n    }\n\n    return () => {\n      terminateMovementAnimation?.();\n      terminateRotationtAnimation?.();\n    };\n  }\n\n  playVideo(data) {\n    return new Promise((resolve) => {\n      // Set default values\n      data = foundry.utils.mergeObject(\n        {\n          anchor: { x: 0.5, y: 0.5 },\n          rotation: 0,\n          scale: { x: 1.0, y: 1.0 },\n          position: { x: 0, y: 0 },\n          playbackRate: 1.0,\n          ease: \"Linear\",\n        },\n        data,\n      );\n\n      // Create video\n      const video = document.createElement(\"video\");\n      video.preload = \"auto\";\n      video.crossOrigin = \"anonymous\";\n      video.src = data.file;\n      video.playbackRate = data.playbackRate;\n      this.videos.push(video);\n\n      /** @type {SpriteMesh | undefined} */\n      let mesh;\n      /** @type {(() => void) | undefined} */\n      let terminateAnimation;\n\n      const onCanPlay = () => {\n        mesh = new SpecialEffectMesh(PIXI.Texture.from(video));\n\n        data.dimensions = { w: video.videoWidth, h: video.videoHeight };\n        data.duration = video.duration;\n        terminateAnimation = this.#configureSpecialEffectMesh(mesh, data);\n\n        canvas.primary.addChild(mesh);\n        canvas.primary.videoMeshes.add(mesh);\n      };\n\n      const onEnd = () => {\n        terminateAnimation?.();\n        canvas.primary.removeChild(mesh);\n        canvas.primary.videoMeshes.delete(mesh);\n        resolve();\n        if (!mesh?._destroyed) mesh?.destroy({ children: true });\n      };\n\n      video.oncanplay = onCanPlay;\n      video.onerror = onEnd;\n      video.onended = onEnd;\n    });\n  }\n\n  static _createMacro(effectData) {\n    return `\n      const data = {\n        file: \"${effectData.file}\",\n        position: {\n          x: canvas.scene.dimensions.width / 2,\n          y: canvas.scene.dimensions.height / 2\n        },\n        anchor : {\n          x: ${effectData.anchor.x},\n          y: ${effectData.anchor.y}\n        },\n        angle: ${effectData.angle},\n        speed: ${effectData.speed},\n        scale: {\n          x: ${effectData.scale.x},\n          y: ${effectData.scale.y}\n        }\n      };\n      const tokens = canvas.tokens.controlled;\n      // No tokens are selected, play in a random position\n      if (tokens.length === 0) {\n        canvas.specials.playVideo(data);\n        game.socket.emit(\"module.${packageId}\", data);\n        return;\n      }\n      const targets = game.user.targets;\n      if (targets.size !== 0) {\n        tokens.forEach(t1 => {\n          targets.forEach(t2 => {\n            canvas.specials.drawFacing(data, t1, t2);\n          })\n        })\n        return;\n      }\n      // Play effect on each token\n      tokens.forEach(t => {\n        data.position = {\n          x: t.position.x + t.w / 2,\n          y: t.position.y + t.h / 2\n        };\n        canvas.specials.playVideo(data);\n        game.socket.emit(\"module.${packageId}\", data);\n      })\n\n    `;\n  }\n\n  drawSpecialToward(effect, tok1, tok2) {\n    const origin = {\n      x: tok1.position.x + tok1.w / 2,\n      y: tok1.position.y + tok1.h / 2,\n    };\n    const effectData = foundry.utils.mergeObject(effect, {\n      position: {\n        x: origin.x,\n        y: origin.y,\n      },\n    });\n    const target = {\n      x: tok2.position.x + tok2.w / 2,\n      y: tok2.position.y + tok2.h / 2,\n    };\n    // Compute angle\n    const ray = new Ray(origin, target);\n    effectData.distance = ray.distance;\n    effectData.rotation = ray.angle;\n    // Play to other clients\n    game.socket.emit(`module.${packageId}`, effectData);\n    // Play effect locally\n    return this.playVideo(effectData);\n  }\n\n  drawFacing(effect, tok1, tok2) {\n    const origin = {\n      x: tok1.position.x + tok1.w / 2,\n      y: tok1.position.y + tok1.h / 2,\n    };\n    const effectData = foundry.utils.mergeObject(effect, {\n      position: {\n        x: origin.x,\n        y: origin.y,\n      },\n    });\n    const target = {\n      x: tok2.position.x + tok2.w / 2,\n      y: tok2.position.y + tok2.h / 2,\n    };\n    // Compute angle\n    const ray = new Ray(origin, target);\n    effectData.rotation = ray.angle;\n    // Play to other clients\n    game.socket.emit(`module.${packageId}`, effectData);\n    // Play effect locally\n    return this.playVideo(effectData);\n  }\n\n  /**\n   * Draw a special effect.\n   * @param {PIXI.InteractionEvent} event         The event that triggered the drawing of the special effect\n   * @param {PIXI.Point}            [savedOrigin] The point that was originally clicked on\n   * @returns {Promise<void>}\n   * @remarks\n   * The savedOrigin parameter is required for regular click events because for some reason, the origin has been removed\n   * from the event's data by the time the event is handled.\n   * TODO: investigate further.\n   */\n  _drawSpecial(event, savedOrigin) {\n    event.stopPropagation();\n\n    const windows = Object.values(ui.windows);\n    const effectConfig = windows.find((w) => w.id == \"specials-config\");\n    if (!effectConfig) return;\n    const active = effectConfig.element.find(\".special-effects.active\");\n    if (active.length == 0) return;\n\n    const id = active[0].dataset.effectId;\n    const folder = active[0].closest(\".folder\").dataset.folderId;\n    const effect = CONFIG.fxmaster.userSpecials[folder].effects[id];\n\n    const effectData = foundry.utils.deepClone(effect);\n    const { x, y } = event.data.origin ?? savedOrigin;\n    const data = {\n      ...effectData,\n      position: { x, y },\n      rotation: event.data.rotation,\n      elevation: this.#elevation,\n    };\n\n    if (!event.data.destination) {\n      game.socket.emit(`module.${packageId}`, data);\n      return this.playVideo(data);\n    }\n\n    // Handling different casting modes\n    const actionToggle = effectConfig.element.find(\".action-toggle.active a\");\n    const mode = actionToggle[0].dataset.action;\n    const ray = new Ray(event.data.origin, event.data.destination);\n    switch (mode) {\n      case \"cast-throw\":\n        data.distance = ray.distance;\n        data.speed = \"auto\";\n        break;\n      case \"cast-extend\":\n        data.width = ray.distance || data.width;\n        data.speed = 0;\n        break;\n      case \"cast-expand\":\n        data.width = ray.distance || data.width;\n        data.keepAspect = true;\n        data.speed = 0;\n        break;\n      case \"cast-rotate\":\n        data.rotationSpeed = ray.distance / canvas.grid.w;\n        data.speed = 0;\n        break;\n      case \"cast-static\":\n        break;\n    }\n\n    game.socket.emit(`module.${packageId}`, data);\n    return this.playVideo(data);\n  }\n\n  /** @override */\n  _onDragLeftDrop(event) {\n    const u = {\n      x: event.data.destination.x - event.data.origin.x,\n      y: event.data.destination.y - event.data.origin.y,\n    };\n    const cos = u.x / Math.hypot(u.x, u.y);\n    event.data.rotation = u.y > 0 ? Math.acos(cos) : -Math.acos(cos);\n    this._drawSpecial(event);\n    this.ruler.clear();\n  }\n\n  /** @override */\n  _onDragLeftStart() {\n    this.windowVisible = this._isWindowVisible();\n    if (!this.windowVisible) return;\n    this._dragging = true;\n  }\n\n  /** @override */\n  _onDragLeftMove(event) {\n    if (!this.windowVisible) return;\n    const ray = new Ray(event.data.origin, event.data.destination);\n    this.ruler.clear();\n    this.ruler\n      .lineStyle(3, 0xaa0033, 0.6)\n      .drawCircle(ray.A.x, ray.A.y, 2)\n      .moveTo(ray.A.x, ray.A.y)\n      .lineTo(ray.B.x, ray.B.y)\n      .drawCircle(ray.B.x, ray.B.y, 2);\n  }\n\n  _isWindowVisible() {\n    const windows = Object.values(ui.windows);\n    const effectConfig = windows.find((w) => w.id == \"specials-config\");\n    if (!effectConfig) return false;\n    return true;\n  }\n\n  /** @override */\n  _onClickLeft(event) {\n    this._dragging = false;\n    const origin = event.data.origin;\n    setTimeout(() => {\n      if (!this._dragging) {\n        event.data.rotation = 0;\n        event.data.destination = undefined;\n        this._drawSpecial(event, origin);\n      }\n      this._dragging = false;\n    }, 400);\n  }\n\n  get #elevation() {\n    const effectConfig = Object.values(ui.windows).find((w) => w.id == \"specials-config\");\n    const elevationString = effectConfig?.element.find(\"input[name='elevation']\").val();\n    const elevation = Number.parseFloat(elevationString);\n    if (Number.isNaN(elevation) || !Number.isFinite(elevation)) return 1;\n    return elevation;\n  }\n}\n","/**\n * An abstract FormApplication that handles functionality common to multiple FXMaster forms.\n * In particular, it provides the following functionality:\n * * Handling of collapsible elements\n * * Making slider changes for range inputs update the accompanying text box immediately\n * * Handling the disabled state of the submission button\n *\n * @extends FormApplication\n * @abstract\n * @interface\n *\n * @param {Object} object                     Some object which is the target data structure to be be updated by the form.\n * @param {FormApplicationOptions} [options]  Additional options which modify the rendering of the sheet.\n */\nexport class FXMasterBaseForm extends FormApplication {\n  /** @override */\n  activateListeners(html) {\n    super.activateListeners(html);\n    html\n      .find(\".fxmaster-groups-list__collapse\")\n      .click((event) =>\n        this._onClickCollapse(\n          event,\n          \"fxmaster-groups-list__item\",\n          \"fxmaster-groups-list__collapsible\",\n          \"fxmaster-groups-list__collapse-icon\",\n        ),\n      );\n    html\n      .find(\".fxmaster-list__collapse\")\n      .click((event) =>\n        this._onClickCollapse(\n          event,\n          \"fxmaster-list__item\",\n          \"fxmaster-list__collapsible\",\n          \"fxmaster-list__collapse-icon\",\n        ),\n      );\n    html.find(\".fxmaster-range-input\").on(\"input\", this._onChangeRange.bind(this));\n  }\n\n  /**\n   * Handle toggling a a collapsible. To collapse the collapsible, the class `${collapsibleClass}--collapsed` is\n   * added to it.\n   *\n   * @param {JQuery.ClickEvent} event            The originating click event\n   * @param {string}            parentClass      The CSS class for selecting the parent that contains both the collapse\n   *                                             \"button\" and the collapsible\n   * @param {string}            collapsibleClass The CSS class for selecting the collapsible inside the parent\n   * @param {string}            [iconClass]      An optional CSS class to select an up/down arrow icon to be toggled\n   * @private\n   */\n  _onClickCollapse(event, parentClass, collapsibleClass, iconClass) {\n    const parentItem = $(event.currentTarget).parents(`.${parentClass}`);\n    const collapsible = parentItem.children(`.${collapsibleClass}`);\n    const icon = iconClass !== undefined ? parentItem.find(`.${iconClass}`) : undefined;\n    this._collapse(collapsible, icon, `${collapsibleClass}--collapsed`);\n  }\n\n  /**\n   * Toggle the collapsed state of an element.\n   * @param {JQuery}      collapsible                 The element to collapse\n   * @param {JQuery|null} [icon]                      An up/down arrow icon to be toggled\n   * @param {string}      [collapsedClass=\"collaped\"] The CSS clas to use to mark the element as collapsed\n   * @param {number}      [speed=250]                 The speed for sliding the element in and out, in milliseconds\n   * @private\n   */\n  _collapse(collapsible, icon, collapsedClass = \"collapsed\", speed = 250) {\n    const shouldCollapse = !collapsible.hasClass(collapsedClass);\n\n    if (shouldCollapse) {\n      collapsible.slideUp(speed, () => {\n        collapsible.addClass(collapsedClass);\n        icon?.removeClass(\"fa-angle-down\").addClass(\"fa-angle-up\");\n      });\n    } else {\n      collapsible.slideDown(speed, () => {\n        collapsible.removeClass(collapsedClass);\n        icon?.removeClass(\"fa-angle-up\").addClass(\"fa-angle-down\");\n      });\n    }\n  }\n\n  /** @override */\n  async _onChangeInput(...args) {\n    this.element.find('button[type=\"submit\"]').prop(\"disabled\", false);\n    return super._onChangeInput(...args);\n  }\n\n  /** @override */\n  async _onSubmit(...args) {\n    this.element.find('button[type=\"submit\"]').prop(\"disabled\", true);\n    return super._onSubmit(...args);\n  }\n}\n","import \"../../../css/particle-effects-config.css\";\n\nimport { packageId } from \"../../constants.js\";\nimport { FXMasterBaseForm } from \"../../base-form.js\";\nimport { resetFlag } from \"../../utils.js\";\n\nexport class ParticleEffectsManagement extends FXMasterBaseForm {\n  /** @override */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"form\", \"fxmaster\", \"particle-effects\", \"sidebar-popout\"],\n      closeOnSubmit: false,\n      submitOnChange: false,\n      submitOnClose: false,\n      popOut: true,\n      editable: game.user.isGM,\n      width: 300,\n      height: \"auto\",\n      template: \"modules/fxmaster/templates/particle-effects-management.hbs\",\n      id: \"effects-config\",\n      title: game.i18n.localize(\"FXMASTER.ParticleEffectsManagementTitle\"),\n    });\n  }\n\n  /** @override */\n  getData() {\n    const currentParticleEffects = canvas.scene?.getFlag(packageId, \"effects\") ?? {};\n\n    const activeParticleEffects = Object.fromEntries(\n      Object.values(currentParticleEffects).map((effect) => [effect.type, effect.options]),\n    );\n\n    /** @type {import(\"../particle-effects-db.js\").ParticleEffects} */\n    const { particleEffects } = CONFIG.fxmaster;\n\n    /** @type {Record<string, {label: string, expanded: boolean, effects: import(\"../particle-effects-db.js\").ParticleEffects}>}} */\n    const initialParticleEffectGroups = {};\n\n    const particleEffectGroups = Object.entries(particleEffects)\n      .sort(([, clsA], [, clsB]) => clsA.group.localeCompare(clsB.group) || clsA.label.localeCompare(clsB.label))\n      .reduce((groups, [type, cls]) => {\n        const group = cls.group;\n        return {\n          ...groups,\n          [group]: {\n            label: `FXMASTER.ParticleEffectsGroup${group.titleCase()}`,\n            expanded: groups[group]?.expanded || Object.keys(activeParticleEffects).includes(type),\n            effects: {\n              ...groups[group]?.effects,\n              [type]: cls,\n            },\n          },\n        };\n      }, initialParticleEffectGroups);\n\n    return {\n      particleEffectGroups,\n      effects: particleEffects,\n      activeEffects: activeParticleEffects,\n    };\n  }\n\n  /** @override */\n  async _updateObject(_, formData) {\n    /** @type {import(\"../particle-effects-db.js\").ParticleEffects} */\n    const { particleEffects } = CONFIG.fxmaster;\n    const effects = Object.fromEntries(\n      Object.entries(particleEffects)\n        .filter(([type]) => !!formData[type])\n        .map(([type, particleEffectCls]) => {\n          const label = particleEffectCls.label;\n\n          const options = Object.fromEntries(\n            Object.entries(particleEffectCls.parameters).map(([key, parameter]) => {\n              const optionValue =\n                parameter.type === \"color\"\n                  ? { apply: formData[`${label}_${key}_apply`], value: formData[`${label}_${key}`] }\n                  : formData[`${label}_${key}`];\n\n              return [key, optionValue];\n            }),\n          );\n\n          const particleEffect = {\n            type,\n            options,\n          };\n          return [`core_${type}`, particleEffect];\n        }),\n    );\n    resetFlag(canvas.scene, \"effects\", effects);\n  }\n}\n","import \"../../../css/filters-config.css\";\n\nimport { packageId } from \"../../constants.js\";\nimport { FXMasterBaseForm } from \"../../base-form.js\";\nimport { resetFlag } from \"../../utils.js\";\n\nexport class FilterEffectsManagementConfig extends FXMasterBaseForm {\n  /** @override */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"form\", \"fxmaster\", \"filters\", \"sidebar-popout\"],\n      closeOnSubmit: false,\n      submitOnChange: false,\n      submitOnClose: false,\n      popOut: true,\n      editable: game.user.isGM,\n      width: 300,\n      height: \"auto\",\n      template: \"modules/fxmaster/templates/filter-effects-management.hbs\",\n      id: \"filters-config\",\n      title: game.i18n.localize(\"FXMASTER.FilterEffectsManagementTitle\"),\n    });\n  }\n\n  /** @override */\n  getData() {\n    const currentFilters = canvas.scene?.getFlag(packageId, \"filters\") ?? {};\n    const activeFilters = Object.fromEntries(\n      Object.values(currentFilters).map((filter) => [filter.type, filter.options]),\n    );\n\n    const filters = Object.fromEntries(\n      Object.entries(CONFIG.fxmaster.filterEffects).sort(([, clsA], [, clsB]) => clsA.label.localeCompare(clsB.label)),\n    );\n\n    return {\n      filters,\n      activeFilters,\n    };\n  }\n\n  /** @override */\n  async _updateObject(_, formData) {\n    if (!canvas.scene) {\n      return;\n    }\n    const filtersDB = CONFIG.fxmaster.filterEffects;\n\n    const filters = Object.fromEntries(\n      Object.entries(filtersDB)\n        .filter(([type]) => !!formData[type])\n        .map(([filterName, filterCls]) => {\n          const label = filterCls.label;\n\n          const options = Object.fromEntries(\n            Object.entries(filterCls.parameters).map(([key, parameter]) => {\n              const optionValue =\n                parameter.type === \"color\"\n                  ? { apply: formData[`${label}_${key}_apply`], value: formData[`${label}_${key}`] }\n                  : formData[`${label}_${key}`];\n\n              return [key, optionValue];\n            }),\n          );\n\n          const filter = {\n            type: filterName,\n            options,\n          };\n          return [`core_${filterName}`, filter];\n        }),\n    );\n\n    resetFlag(canvas.scene, \"filters\", filters);\n  }\n}\n","import { logger } from \"./logger.js\";\nimport { packageId } from \"./constants.js\";\n\nconst defaultMacroImg = \"icons/svg/windmill.svg\";\n\nexport async function saveParticleAndFilterEffectsAsMacro() {\n  const particleEffectFlags = canvas.scene?.getFlag(packageId, \"effects\") ?? {};\n  const particleEffects = Object.values(particleEffectFlags);\n\n  const filterFlags = canvas.scene?.getFlag(packageId, \"filters\") ?? {};\n  const filterEffects = Object.values(filterFlags);\n\n  const { name, img } = getMacroNameAndImg(particleEffects, filterEffects);\n\n  const commands = [];\n  if (particleEffects.length > 0) {\n    commands.push(`Hooks.call('${packageId}.updateParticleEffects', ${JSON.stringify(particleEffects)});`);\n  }\n  if (filterEffects.length > 0) {\n    commands.push(`FXMASTER.filters.setFilters(${JSON.stringify(filterEffects)});`);\n  }\n  const command = commands.join(\"\\n\");\n\n  await Macro.create({ type: \"script\", name, command, img });\n  ui.notifications.info(`Macro '${name}' has been saved in the macro directory`);\n}\n\nfunction getMacroNameAndImg(particleEffects, filterEffects) {\n  const particleEffectLabelsAndIcons = particleEffects.flatMap(({ type }) => {\n    const particleEffectCls = CONFIG.fxmaster.particleEffects[type];\n    if (!particleEffectCls) {\n      logger.warn(`Encountered unknown particle effect type '${type}' during macro creation, skipping it.`);\n      return [];\n    }\n    return [{ label: game.i18n.localize(particleEffectCls.label), icon: particleEffectCls.icon }];\n  });\n  const filterLabels = filterEffects.flatMap(({ type }) => {\n    const filterEffectCls = CONFIG.fxmaster.filterEffects[type];\n    if (!filterEffectCls) {\n      logger.warn(`Encountered unknown filter effect type '${type}' during macro creation, skipping it.`);\n      return [];\n    }\n    return [{ label: game.i18n.localize(filterEffectCls.label) }];\n  });\n\n  if (filterLabels.length === 0) {\n    return particleEffectLabelsAndIcons.length === 1\n      ? {\n          name: `Particle Effect: ${particleEffectLabelsAndIcons[0].label}`,\n          img: particleEffectLabelsAndIcons[0].icon,\n        }\n      : { name: \"Particle Effects\", img: defaultMacroImg };\n  } else if (particleEffectLabelsAndIcons.length === 0) {\n    return filterLabels.length === 1\n      ? {\n          name: `Filter Effect: ${filterLabels[0].label}`,\n          img: defaultMacroImg,\n        }\n      : { name: \"Filter Effects\", img: defaultMacroImg };\n  } else {\n    return { name: `Particle & Filter Effects`, img: defaultMacroImg };\n  }\n}\n","import { packageId } from \"./constants.js\";\nimport { FilterManager } from \"./filter-effects/filter-manager.js\";\nimport { ParticleEffectsManagement } from \"./particle-effects/applications/particle-effects-management.js\";\nimport { SpecialEffectsManagement } from \"./special-effects/applications/special-effects-management.js\";\nimport { FilterEffectsManagementConfig } from \"./filter-effects/applications/filter-effects-management.js\";\nimport { saveParticleAndFilterEffectsAsMacro } from \"./macro.js\";\n\nexport function registerGetSceneControlButtonsHook() {\n  Hooks.on(\"getSceneControlButtons\", getSceneControlButtons);\n}\n\nfunction getSceneControlButtons(controls) {\n  if (canvas == null) {\n    return;\n  }\n  controls.push({\n    name: \"effects\",\n    title: \"CONTROLS.Effects\",\n    icon: \"fas fa-wand-magic-sparkles\",\n    layer: \"specials\",\n    visible: game.user.role >= game.settings.get(packageId, \"permission-create\"),\n    tools: [\n      {\n        name: \"specials\",\n        title: \"CONTROLS.SpecialFX\",\n        icon: \"fas fa-hat-wizard\",\n        onClick: () => {\n          new SpecialEffectsManagement().render(true);\n        },\n        button: true,\n      },\n      {\n        name: \"particle-effects\",\n        title: \"CONTROLS.ParticleEffects\",\n        icon: \"fas fa-cloud-rain\",\n        onClick: () => {\n          new ParticleEffectsManagement().render(true);\n        },\n        visible: game.user.isGM,\n        button: true,\n      },\n      {\n        name: \"invertmask\",\n        title: \"CONTROLS.InvertMask\",\n        icon: \"fas fa-mask\",\n        onClick: () => {\n          if (canvas.scene) {\n            const invert = canvas.scene.getFlag(packageId, \"invert\") ?? false;\n            canvas.scene.setFlag(packageId, \"invert\", !invert);\n          }\n        },\n        visible: game.user.isGM,\n        active: canvas.scene?.getFlag(packageId, \"invert\") ?? false,\n        toggle: true,\n      },\n      {\n        name: \"filters\",\n        title: \"CONTROLS.Filters\",\n        icon: \"fas fa-filter\",\n        onClick: () => {\n          new FilterEffectsManagementConfig().render(true);\n        },\n        visible: game.user.isGM,\n        button: true,\n      },\n      {\n        name: \"save\",\n        title: \"CONTROLS.SaveMacro\",\n        icon: \"fas fa-floppy-disk\",\n        onClick: saveParticleAndFilterEffectsAsMacro,\n        visible: game.user.isGM,\n        button: true,\n      },\n      {\n        name: \"clearfx\",\n        title: \"CONTROLS.ClearFX\",\n        icon: \"fas fa-trash\",\n        onClick: () => {\n          Dialog.confirm({\n            title: game.i18n.localize(\"FXMASTER.ClearParticleAndFilterEffectsTitle\"),\n            content: game.i18n.localize(\"FXMASTER.ClearParticleAndFilterEffectsContent\"),\n            yes: () => {\n              if (canvas.scene) {\n                FilterManager.instance.removeAll();\n                canvas.scene.unsetFlag(packageId, \"effects\");\n              }\n            },\n            defaultYes: true,\n          });\n        },\n        visible: game.user.isGM,\n        button: true,\n      },\n    ],\n    activeTool: \"effect\",\n  });\n}\n","import { isEnabled, registerSettings } from \"./settings.js\";\nimport { registerHooks } from \"./hooks.js\";\nimport { FXMASTER } from \"./config.js\";\nimport { ParticleEffectsLayer } from \"./particle-effects/particle-effects-layer.js\";\nimport { registeDrawingsMaskFunctionality } from \"./particle-effects/drawings-mask.js\";\nimport { registerSceneMaskFunctionality } from \"./particle-effects/scene-mask.js\";\nimport { FilterManager } from \"./filter-effects/filter-manager.js\";\nimport { isOnTargetMigration, migrate, migration } from \"./migration/migration.js\";\nimport { SpecialEffectsManagement } from \"./special-effects/applications/special-effects-management.js\";\nimport { SpecialEffectsLayer } from \"./special-effects/special-effects-layer.js\";\nimport { registerHandlebarsHelpers } from \"./handlebars-helpers.js\";\nimport { registerGetSceneControlButtonsHook } from \"./controls.js\";\nimport { format } from \"./logger.js\";\n\nimport \"../css/common.css\";\n\nwindow.FXMASTER = {\n  filters: FilterManager.instance,\n  migration,\n};\n\nfunction registerLayers() {\n  CONFIG.Canvas.layers.fxmaster = { layerClass: ParticleEffectsLayer, group: \"primary\" };\n  CONFIG.Canvas.layers.specials = { layerClass: SpecialEffectsLayer, group: \"interface\" };\n}\n\nfunction parseSpecialEffects() {\n  const effectData = game.settings.get(\"fxmaster\", \"specialEffects\");\n  const specialEffects = foundry.utils.deepClone(CONFIG.fxmaster.specialEffects);\n  effectData.reduce((acc, cur) => {\n    if (!cur.folder) cur.folder = \"Custom\";\n    const normalizedFolder = cur.folder.toLowerCase().replace(/ /g, \"\");\n    if (!acc[normalizedFolder]) acc[normalizedFolder] = { label: cur.folder, effects: [] };\n    acc[normalizedFolder].effects.push(cur);\n    return acc;\n  }, specialEffects);\n  Object.keys(specialEffects).forEach((k) => {\n    specialEffects[k].effects.sort((a, b) => (\"\" + a.label).localeCompare(b.label));\n  });\n  CONFIG.fxmaster.userSpecials = specialEffects;\n}\n\nHooks.once(\"init\", function () {\n  registerSettings();\n  registerHooks();\n  registerLayers();\n  registerHandlebarsHelpers();\n\n  if (!CONFIG.fxmaster) CONFIG.fxmaster = {};\n\n  const configDeprecations = {\n    weather: \"particleEffects\",\n    filters: \"filterEffects\",\n    specials: \"specialEffects\",\n  };\n\n  const getConfigDeprecationMessage = (old, replacement) =>\n    format(`CONFIG#fxmaster#${old} is deprecated in favor of CONFIG#fxmaster#${replacement}'`);\n\n  for (const [old, replacement] of Object.entries(configDeprecations)) {\n    if (CONFIG.fxmaster[old]) {\n      CONFIG.fxmaster[replacement] = CONFIG.fxmaster[old];\n      delete CONFIG.fxmaster[old];\n      const msg = getConfigDeprecationMessage(old, replacement);\n      foundry.utils.logCompatibilityWarning(msg, {\n        mod: foundry.CONST.COMPATIBILITY_MODES.WARNING,\n        since: \"FXMaster v3.0.0\",\n        until: \"FXMaster v4.0.0\",\n        stack: false,\n      });\n    }\n  }\n\n  foundry.utils.mergeObject(CONFIG.fxmaster, {\n    filterEffects: FXMASTER.filterEffects,\n    particleEffects: FXMASTER.particleEffects,\n    specialEffects: FXMASTER.specialEffects,\n  });\n\n  for (const [old, replacement] of Object.entries(configDeprecations)) {\n    Object.defineProperty(CONFIG.fxmaster, old, {\n      get: () => {\n        const msg = getConfigDeprecationMessage(old, replacement);\n        foundry.utils.logCompatibilityWarning(msg, {\n          mod: foundry.CONST.COMPATIBILITY_MODES.WARNING,\n          since: \"FXMaster v3.0.0\",\n          until: \"FXMaster v4.0.0\",\n          stack: false,\n        });\n        return CONFIG.fxmaster[replacement];\n      },\n    });\n  }\n\n  foundry.utils.mergeObject(CONFIG.weatherEffects, CONFIG.fxmaster.particleEffects);\n});\n\nHooks.once(\"ready\", () => {\n  migrate();\n});\n\nHooks.on(\"canvasInit\", () => {\n  if (isEnabled()) {\n    parseSpecialEffects();\n  }\n});\n\nHooks.on(\"updateScene\", (scene, data) => {\n  if (!isEnabled() || !isOnTargetMigration() || scene !== canvas.scene) {\n    return;\n  }\n  if (\n    foundry.utils.hasProperty(data, \"flags.fxmaster.effects\") ||\n    foundry.utils.hasProperty(data, \"flags.fxmaster.-=effects\")\n  ) {\n    canvas.fxmaster.drawParticleEffects({ soft: true });\n  }\n});\n\nHooks.on(\"dropCanvasData\", async (canvas, data) => {\n  if (!(canvas.activeLayer instanceof SpecialEffectsLayer) || !canvas.scene) return;\n  if (data.type !== \"SpecialEffect\") return;\n\n  await new Promise((resolve) => {\n    const vid = document.createElement(\"video\");\n    vid.addEventListener(\n      \"loadedmetadata\",\n      () => {\n        data.width = vid.videoWidth * data.scale.x;\n        data.height = vid.videoHeight * data.scale.y;\n        resolve();\n      },\n      false,\n    );\n    vid.src = data.file;\n  });\n\n  const tileData = {\n    alpha: 1,\n    flags: {},\n    height: data.height,\n    hidden: false,\n    img: data.file,\n    locked: false,\n    occlusion: { mode: 1, alpha: 0 },\n    overHead: false,\n    rotation: 0,\n    tileSize: 100,\n    video: { loop: true, autoplay: true, volume: 0 },\n    width: data.width,\n    x: data.x - data.anchor.x * data.width,\n    y: data.y - data.anchor.y * data.height,\n    z: 100,\n  };\n  ui.notifications.info(`A new Tile was created for effect ${data.label}`);\n  canvas.scene.createEmbeddedDocuments(\"Tile\", [tileData]).then(() => {});\n});\n\nHooks.on(\"hotbarDrop\", (hotbar, data) => {\n  if (data.type !== \"SpecialEffect\") return;\n  const macroCommand = SpecialEffectsLayer._createMacro(data);\n  data.type = \"Macro\";\n  data.data = {\n    command: macroCommand,\n    name: data.label,\n    type: \"script\",\n    author: game.user.id,\n  };\n});\n\nHooks.on(\"updateSetting\", (setting) => {\n  if (setting.key === \"fxmaster.specialEffects\") {\n    parseSpecialEffects();\n  }\n  Object.values(ui.windows).forEach((w) => {\n    if (w instanceof SpecialEffectsManagement) {\n      w.render(false);\n    }\n  });\n});\n\nHooks.on(\"renderDrawingHUD\", (hud, html) => {\n  const maskToggle = document.createElement(\"div\");\n  maskToggle.classList.add(\"control-icon\");\n  if (hud.object.document.flags?.fxmaster?.masking) {\n    maskToggle.classList.add(\"active\");\n  }\n  maskToggle.setAttribute(\"title\", game.i18n.localize(\"FXMASTER.MaskParticleEffects\"));\n  maskToggle.dataset.action = \"mask\";\n  maskToggle.innerHTML = `<i class=\"fas fa-cloud\"></i>`;\n  html.find(\".col.left\").append(maskToggle);\n\n  html.find(\".control-icon[data-action='mask']\").on(\"click\", (event) => {\n    event.preventDefault();\n\n    const isMask = hud.object.document.flags?.fxmaster?.masking;\n    const updates = hud.layer.controlled.map((object) => {\n      return { _id: object.id, \"flags.fxmaster.masking\": !isMask };\n    });\n\n    event.currentTarget.classList.toggle(\"active\", !isMask);\n    canvas.scene.updateEmbeddedDocuments(hud.object.document.documentName, updates);\n  });\n});\n\nregisterGetSceneControlButtonsHook();\nregisterSceneMaskFunctionality();\nregisteDrawingsMaskFunctionality();\n","export function registerHandlebarsHelpers() {\n  Handlebars.registerHelper(\"fxmasterParameter\", (effectCls, parameterConfig, parameterName, options = {}) => {\n    const _default = options[parameterName] ?? effectCls.default[parameterName];\n\n    switch (parameterConfig.type) {\n      case \"color\":\n        return `\n              <input type=\"checkbox\" name=\"${effectCls.label}_${parameterName}_apply\" ${\n          _default.apply ? \"checked\" : \"\"\n        }/>\n              <input type=\"color\" name=\"${effectCls.label}_${parameterName}\" value=\"${_default.value}\">\n              `;\n      case \"range\":\n        return `\n              <input class=\"fxmaster-range-input\" type=\"range\" step=\"${parameterConfig.step}\" min=\"${parameterConfig.min}\" max=\"${parameterConfig.max}\" name=\"${effectCls.label}_${parameterName}\" value=\"${_default}\">\n              <span class=\"range-value\">${_default}</span>\n              `;\n      case \"number\":\n        return `\n              <input class=\"fxmaster-text-input\" type=\"text\" data-dtype=\"Number\" name=\"${effectCls.label}_${parameterName}\" value=\"${_default}\">\n              `;\n      case \"multi-select\":\n        return `<select class=\"fxmaster-multi-select\" multiple name=\"${\n          effectCls.label\n        }_${parameterName}\">${Object.entries(parameterConfig.options).map(\n          ([key, name]) =>\n            `<option class=\"fxmaster-multi-select__option\" value=\"${key}\"${\n              _default.includes(key) ? \" selected\" : \"\"\n            }>${game.i18n.localize(name)}</option>`,\n        )}</select>`;\n    }\n    return \"\";\n  });\n}\n"],"names":["packageId","resetFlag","document","key","value","Array","isArray","oldFlags","getFlag","Object","keys","forEach","k","setFlag","roundToDecimals","number","decimals","Number","Math","round","getLoggingFunction","type","log","console","data","format","msg","logger","freeze","debug","info","warn","error","async","migrateWorldCollection","collection","migrateDocument","isError","documentName","name","id","e","migrateCompendiumCollection","pack","metadata","wasLocked","locked","configure","documents","getDocuments","migrateWorldCollections","collections","migrationConfiguration","migrateCompendiumCollections","packs","migrateNonWorldPacks","package","migrate","game","migrate2","migrationConfiguration2","Scene","migrateScene","scene","particleEffects","length","newParticleEffects","fromEntries","entries","map","effect","particleEffectClass","CONFIG","fxmaster","options","convertOptionsToV2","migrate3","migrationConfiguration3","Macro","migrateMacro","macro","command","img","newCommand","replaceAll","newImg","update","undefined","unsetFlag","isOnTargetWorldMigration","settings","get","migrate1","effects","i","scale","x","y","set","migrateClient","migration","ui","notifications","permanent","localize","user","isGM","migrateWorld","isOnTargetMigration","isOnTargetClientMigration","executeWhenWorldIsMigratedToLatest","callback","worldMigrationCallbacks","push","onWorldMigrated","shift","client","world","config","helpers","isEnabled","registerHooks","Hooks","on","onSwitchParticleEffects","onUpdateParticleEffects","deprecations","hook","onDeprecated","args","deprecation","replacedBy","foundry","utils","logCompatibilityWarning","mod","CONST","COMPATIBILITY_MODES","WARNING","since","until","stack","parameters","canvas","currentEffects","omit","object","_omitted","rest","parametersArray","randomID","updateWeather","switchWeather","FXMasterFilterEffectMixin","Base","constructor","super","this","enabled","applyOptions","neutral","static","default","parameterName","parameterConfig","optionContext","play","_options","FadingFilterMixin","currentAnimation","initialized","duration","CanvasAnimation","terminateAnimation","toAnimate","toSet","partition","skipInitialAnimation","anim","parent","attribute","to","animate","finally","skipFading","otherOptions","animateOptions","stop","completed","BloomFilter","PIXI","filters","AdvancedBloomFilter","blur","label","max","min","step","bloomScale","threshold","noise","ColorFilter","AdjustmentFilter","color","apply","saturation","contrast","brightness","gamma","red","green","blue","r","g","b","Color","from","FogFilter","Filter","uniforms","time","dimensions","Float32Array","lastTick","speed","density","size","app","ticker","lastTime","delta","filterManager","input","output","clear","currentState","filterMatrix","Matrix","copyFrom","target","worldTransform","invert","easeFunctions","Linear","easeLinear","InSine","easeInSine","cos","PI","OutSine","easeOutSine","sin","InOutSine","easeInOutSine","InBack","easeInBack","c1","OutBack","easeOutBack","pow","InOutBack","easeInOutBack","c2","InCubic","easeInCubic","OutCubic","easeOutCubic","InOutCubic","easeInOutCubic","InCirc","easeInCirc","sqrt","OutCirc","easeOutCirc","InOutCirc","easeInOutCirc","LightningFilter","nextLigthningTime","frequency","spark_duration","random","attributes","context","easing","OldFilmFilter","vignetting","vignettingAlpha","sepia","seed","PredatorFilter","CRTFilter","curvature","period","lineWidth","UnderwaterFilter","DisplacementFilter","displacemenntMap","Sprite","displacementMap","texture","baseTexture","wrapMode","WRAP_MODES","REPEAT","anchor","width","height","primary","addChild","removeChild","maskSprite","filterEffects","bloom","fog","lightning","oldfilm","predator","underwater","FXMasterParticleEffect","ParticleEffect","group","icon","direction","defaultDirection","lifetime","tint","mergeObject","insertKeys","inplace","defaultConfig","Error","rotationBehavior","behaviors","find","behavior","minStart","maxStart","rotationStaticBehavior","applyOptionsToConfig","_applyScaleToConfig","_applySpeedToConfig","_applyDirectionToConfig","_applyLifetimeToConfig","_applyTintToConfig","_applyFactorToValueList","valueList","factor","list","valueStep","_applyFactorToRandNumber","randNumber","filter","includes","range","concat","prewarm","emitters","emitter","autoUpdate","emit","maxLifetime","timeout","emitterPromises","Promise","resolve","emitterLifetime","playOnceAndDestroy","promises","all","setTimeout","then","destroy","bind","race","optionKey","optionValue","_convertScaleToV2","_convertSpeedToV2","_convertDensityToV2","speeds","flatMap","maximumSpeed","d","DefautlRectangleSpawnMixin","getParticleEmitters","mergeWithDefaults","maxParticles","deepClone","sceneRect","w","h","createEmitter","SpiderParticleEffect","performDeletions","alpha","minMult","framerate","loop","textures","fromRange","n","count","String","padStart","SPIDERS_CONFIG","withSteppedGradientColor","steps","getBehavior","reset","particles","ParticleUtils","createSteppedGradient","StarsParticleEffect","accel","minSpeed","maxSpeed","blendMode","STARS_CONFIG","AutumnLeavesParticleEffect","LEAF_CONFIG","BatsParticleEffect","BATS_CONFIG","BubblesParticleEffect","BUBBLES_CONFIG","CloudsParticleEffect","CLOUDS_CONFIG","offsetFactor","averageDiagonalTime","minLifetime","angle","toRadians","directionVector","CrowsParticleEffect","CROWS_CONFIG","FogParticleEffect","FOG_CONFIG","RatsParticleEffect","RATS_CONFIG","SnowstormParticleEffect","path","SNOWSTORM_CONFIG","FXMASTER","bats","birds","BirdsParticleEffect","animations","glide","flap","mixed","BIRDS_CONFIG","anims","_getAnimations","textureNumber","fill","deepFlatten","getAnim","animation","crows","eagles","EaglesParticleEffect","EAGLES_CONFIG","_textures","_initializeTextures","_textureCache","spriteSheetTexture","Texture","spriteSheetData","meta","frames","frame","rotated","trimmed","spriteSourceSize","sourceSize","Spritesheet","parse","values","rats","spiders","bubbles","embers","EmbersParticleEffect","EMBERS_CONFIG","stars","leaves","clouds","rain","RainParticleEffect","pos","RAIN_CONFIG","rainConfig","splashConfig","SPLASH_CONFIG","raintop","RainTopParticleEffect","_canvasPanHookId","RAIN_TOP_CONFIG","sceneRadius","sceneWidth","sceneHeight","moveSpeedList","averageSpeed","reduce","acc","cur","radius","innerRadius","affectRotation","updateOwnerPos","stage","pivot","sceneX","sceneY","_unregisterCanvasPanHook","_canvas","position","off","rainsimple","RainSimpleParticleEffect","snow","SnowParticleEffect","SNOW_CONFIG","snowstorm","specialEffects","file","author","ParticleEffectsLayer","CanvasLayer","particleEffectsContainer","particleEffectOcclusionFilter","elevation","weather","Infinity","weatherEffects","layerOptions","draw","fx","_tearDown","createParticleEffectOcclusionFilter","drawParticleEffects","soft","FullCanvasContainer","accessibleChildren","interactiveChildren","filterArea","renderer","screen","stopPromise","fadeOut","flags","optionName","InverseOcclusionMaskFilter","create","alphaOcclusion","uMaskSampler","masks","depth","renderTexture","channel","drawDrawingsMaskIfCurrentScene","drawDrawingsMask","msk","fxmasterDrawingsMask","mask","createInvertedMask","LegacyGraphics","beginFill","drawShape","rect","endFill","drawings","placeables","drawing","beginHole","drawShapeToMask","endHole","createMask","MaskData","colorMask","COLOR_MASK_BITS","BLUE","shape","geometry","graphicsData","clone","Drawing","SHAPE_TYPES","ELLIPSE","center","POLYGON","points","p","drawPolygon","s","drawSceneMask","fxmasterSceneMask","shouldMaskToScene","background","src","foreground","intersection","FilterManager","_ticker","container","environment","instance","add","filterInfos","filterInfo","filtersToCreate","filtersToUpdate","filtersToDelete","deletePromises","removeFilterFromContainer","applyFilters","otherFilters","f","removeFilter","addFilter","filterInfoArray","activate","hasProperty","SpecialEffectConfig","FormApplication","defaultOptions","classes","closeOnSubmit","submitOnChange","submitOnClose","popOut","editable","template","title","i18n","setDefault","getData","eases","folder","animationDelay","start","end","ease","preset","activateListeners","html","event","_onChangeRange","_","formData","fxs","newData","parseFloat","SpecialEffectsManagement","Application","resizable","dragDrop","dragSelector","folders","userSpecials","click","currentTarget","closest","items","$","classList","remove","parentElement","render","hover","ev","folderId","dataset","effectId","findIndex","v","splice","c","children","_toggleFolder","hasClass","removeClass","addClass","_onDragStart","effectData","dataTransfer","setData","JSON","stringify","SpecialEffectMesh","SpriteMesh","SpecialEffectsLayer","InteractionLayer","videos","_dragging","ruler","windowVisible","socket","playVideo","zIndex","_draw","Graphics","video","_configureProjectile","mesh","distance","deltaX","rotation","deltaY","animationDuration","animationName","_configureRotate","rotationSpeed","configureSpecialEffectMesh","normalizeRadians","keepAspect","aspectRatio","terminateMovementAnimation","terminateRotationtAnimation","playbackRate","createElement","preload","crossOrigin","onEnd","videoMeshes","delete","_destroyed","oncanplay","videoWidth","videoHeight","onerror","onended","drawSpecialToward","tok1","tok2","origin","ray","Ray","drawFacing","_drawSpecial","savedOrigin","stopPropagation","effectConfig","windows","active","element","destination","mode","action","grid","_onDragLeftDrop","u","hypot","acos","_onDragLeftStart","_isWindowVisible","_onDragLeftMove","lineStyle","drawCircle","A","moveTo","lineTo","B","_onClickLeft","elevationString","val","isNaN","isFinite","FXMasterBaseForm","_onClickCollapse","parentClass","collapsibleClass","iconClass","parentItem","parents","collapsible","_collapse","collapsedClass","slideUp","slideDown","prop","_onChangeInput","_onSubmit","ParticleEffectsManagement","currentParticleEffects","activeParticleEffects","particleEffectGroups","sort","clsA","clsB","localeCompare","groups","cls","titleCase","expanded","activeEffects","particleEffectCls","parameter","FilterEffectsManagementConfig","currentFilters","activeFilters","filtersDB","filterName","filterCls","defaultMacroImg","saveParticleAndFilterEffectsAsMacro","particleEffectFlags","filterFlags","getMacroNameAndImg","particleEffectLabelsAndIcons","filterLabels","filterEffectCls","commands","join","getSceneControlButtons","controls","layer","visible","role","tools","onClick","button","toggle","Dialog","confirm","content","yes","removeAll","defaultYes","activeTool","parseSpecialEffects","normalizedFolder","toLowerCase","replace","a","window","once","registerSettings","register","scope","Boolean","requiresReload","onChange","hint","USER_ROLES","ASSISTANT","choices","PLAYER","TRUSTED","GAMEMASTER","registerLayers","Canvas","layers","layerClass","specials","registerHandlebarsHelpers","Handlebars","registerHelper","effectCls","_default","configDeprecations","getConfigDeprecationMessage","old","replacement","defineProperty","activeLayer","vid","addEventListener","tileData","hidden","occlusion","overHead","tileSize","autoplay","volume","z","createEmbeddedDocuments","hotbar","macroCommand","_createMacro","setting","hud","maskToggle","masking","setAttribute","innerHTML","append","preventDefault","isMask","updates","controlled","_id","updateEmbeddedDocuments","registerGetSceneControlButtonsHook","registerSceneMaskFunctionality","registeDrawingsMaskFunctionality"],"mappings":"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"}